<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="4" failures="0" name="com.revature.daotest.CommentDaoTest" time="12.221" errors="1" skipped="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.8.0_181\jre\bin"/>
    <property name="java.vm.version" value="25.181-b13"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="C:/Users/Crandon/Documents/workspace-sts-3.9.5.RELEASE/jenkins/p2-mvc"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=";"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.script" value=""/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc"/>
    <property name="java.runtime.version" value="1.8.0_181-b13"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.8.0_181\jre\lib\endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\Crandon\AppData\Local\Temp\"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 10"/>
    <property name="classworlds.conf" value="C:/Program Files/apache-maven-3.5.4/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk1.8.0_181\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Users\Crandon\bin;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\local\bin;C:\Program Files\Git\usr\bin;C:\Program Files\Git\usr\bin;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\Users\Crandon\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;D:\app\Crandon\product\12.2.0\dbhome_2\bin;D:\app\Crandon\product\12.2.0\dbhome_1\bin;D:\app\Crandon\product\12.2.0\dbhome_21\bin;D:\app\Crandon\virtual\product\12.2.0\dbhome_1\bin;C:\Program Files\Java\jdk1.8.0_181\bin;C:\Program Files\Java\jre1.8.0_181\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client;C:\Program Files\Intel\iCLS Client;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\WINDOWS\System32\OpenSSH;C:\Program Files\Git\cmd;D:\;C:\Program Files\dotnet;C:\Program Files\Microsoft SQL Server\130\Tools\Binn;C:\Program Files (x86)\dotnet;C:\Program Files\Microsoft VS Code\bin;C:\Users\Crandon\Downloads\apache-maven-3.5.4-src\apache-maven-3.5.4\apache-maven\src\bin;C:\Users\Crandon\Downloads\apache-maven-3.5.4-src\apache-maven-3.5.4;C:\Program Files\apache-maven-3.5.4\bin;C:\ProgramData\chocolatey\bin;C:\Ruby24-x64\bin;C:\Users\Crandon\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;C:\Users\Crandon\AppData\Roaming\npm;C:\Users\Crandon\AppData\Local\hyper\app-2.0.0\resources\bin;C:\Program Files\Git\usr\bin\vendor_perl;C:\Program Files\Git\usr\bin\core_perl;."/>
    <property name="maven.conf" value="C:/Program Files/apache-maven-3.5.4/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.0"/>
    <property name="library.jansi.path" value="C:/Program Files/apache-maven-3.5.4/lib/jansi-native"/>
    <property name="user.home" value="C:\Users\Crandon"/>
    <property name="user.timezone" value="America/New_York"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="user.name" value="Crandon"/>
    <property name="java.class.path" value="C:/Program Files/apache-maven-3.5.4/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="C:\Program Files\Java\jdk1.8.0_181\jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean package"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_181"/>
    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext"/>
    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.8.0_181\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_181\jre\classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="C:\Program Files\apache-maven-3.5.4"/>
    <property name="file.separator" value="\"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="windows"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase classname="com.revature.daotest.CommentDaoTest" name="createComment" time="0.003"/>
  <testcase classname="com.revature.daotest.CommentDaoTest" name="getCommentsByUserId" time="0"/>
  <testcase classname="com.revature.daotest.CommentDaoTest" name="getCommentById" time="11.456">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
	at com.revature.daotest.CommentDaoTest.getCommentById(CommentDaoTest.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</error>
    <system-out>- Logging Provider: org.jboss.logging.Log4jLoggerProvider
- Adding type registration boolean -&gt; org.hibernate.type.BooleanType@3498ed
- Adding type registration boolean -&gt; org.hibernate.type.BooleanType@3498ed
- Adding type registration java.lang.Boolean -&gt; org.hibernate.type.BooleanType@3498ed
- Adding type registration numeric_boolean -&gt; org.hibernate.type.NumericBooleanType@380fb434
- Adding type registration true_false -&gt; org.hibernate.type.TrueFalseType@79698539
- Adding type registration yes_no -&gt; org.hibernate.type.YesNoType@38082d64
- Adding type registration byte -&gt; org.hibernate.type.ByteType@4e04a765
- Adding type registration byte -&gt; org.hibernate.type.ByteType@4e04a765
- Adding type registration java.lang.Byte -&gt; org.hibernate.type.ByteType@4e04a765
- Adding type registration character -&gt; org.hibernate.type.CharacterType@2c6a3f77
- Adding type registration char -&gt; org.hibernate.type.CharacterType@2c6a3f77
- Adding type registration java.lang.Character -&gt; org.hibernate.type.CharacterType@2c6a3f77
- Adding type registration short -&gt; org.hibernate.type.ShortType@3f2a3a5
- Adding type registration short -&gt; org.hibernate.type.ShortType@3f2a3a5
- Adding type registration java.lang.Short -&gt; org.hibernate.type.ShortType@3f2a3a5
- Adding type registration integer -&gt; org.hibernate.type.IntegerType@68837a77
- Adding type registration int -&gt; org.hibernate.type.IntegerType@68837a77
- Adding type registration java.lang.Integer -&gt; org.hibernate.type.IntegerType@68837a77
- Adding type registration long -&gt; org.hibernate.type.LongType@6b143ee9
- Adding type registration long -&gt; org.hibernate.type.LongType@6b143ee9
- Adding type registration java.lang.Long -&gt; org.hibernate.type.LongType@6b143ee9
- Adding type registration float -&gt; org.hibernate.type.FloatType@366e2eef
- Adding type registration float -&gt; org.hibernate.type.FloatType@366e2eef
- Adding type registration java.lang.Float -&gt; org.hibernate.type.FloatType@366e2eef
- Adding type registration double -&gt; org.hibernate.type.DoubleType@3551a94
- Adding type registration double -&gt; org.hibernate.type.DoubleType@3551a94
- Adding type registration java.lang.Double -&gt; org.hibernate.type.DoubleType@3551a94
- Adding type registration big_decimal -&gt; org.hibernate.type.BigDecimalType@50f8360d
- Adding type registration java.math.BigDecimal -&gt; org.hibernate.type.BigDecimalType@50f8360d
- Adding type registration big_integer -&gt; org.hibernate.type.BigIntegerType@26f67b76
- Adding type registration java.math.BigInteger -&gt; org.hibernate.type.BigIntegerType@26f67b76
- Adding type registration string -&gt; org.hibernate.type.StringType@337d0578
- Adding type registration java.lang.String -&gt; org.hibernate.type.StringType@337d0578
- Adding type registration nstring -&gt; org.hibernate.type.StringNVarcharType@7946e1f4
- Adding type registration ncharacter -&gt; org.hibernate.type.CharacterNCharType@32e6e9c3
- Adding type registration url -&gt; org.hibernate.type.UrlType@5afa04c
- Adding type registration java.net.URL -&gt; org.hibernate.type.UrlType@5afa04c
- Adding type registration date -&gt; org.hibernate.type.DateType@7c0e2abd
- Adding type registration java.sql.Date -&gt; org.hibernate.type.DateType@7c0e2abd
- Adding type registration time -&gt; org.hibernate.type.TimeType@7ac7a4e4
- Adding type registration java.sql.Time -&gt; org.hibernate.type.TimeType@7ac7a4e4
- Adding type registration timestamp -&gt; org.hibernate.type.TimestampType@4439f31e
- Adding type registration java.sql.Timestamp -&gt; org.hibernate.type.TimestampType@4439f31e
- Adding type registration java.util.Date -&gt; org.hibernate.type.TimestampType@4439f31e
- Adding type registration dbtimestamp -&gt; org.hibernate.type.DbTimestampType@5d5eef3d
- Adding type registration calendar -&gt; org.hibernate.type.CalendarType@2ef5e5e3
- Adding type registration java.util.Calendar -&gt; org.hibernate.type.CalendarType@2ef5e5e3
- Adding type registration java.util.GregorianCalendar -&gt; org.hibernate.type.CalendarType@2ef5e5e3
- Adding type registration calendar_date -&gt; org.hibernate.type.CalendarDateType@51efea79
- Adding type registration locale -&gt; org.hibernate.type.LocaleType@62ee68d8
- Adding type registration java.util.Locale -&gt; org.hibernate.type.LocaleType@62ee68d8
- Adding type registration currency -&gt; org.hibernate.type.CurrencyType@d2cc05a
- Adding type registration java.util.Currency -&gt; org.hibernate.type.CurrencyType@d2cc05a
- Adding type registration timezone -&gt; org.hibernate.type.TimeZoneType@2a5ca609
- Adding type registration java.util.TimeZone -&gt; org.hibernate.type.TimeZoneType@2a5ca609
- Adding type registration class -&gt; org.hibernate.type.ClassType@51565ec2
- Adding type registration java.lang.Class -&gt; org.hibernate.type.ClassType@51565ec2
- Adding type registration uuid-binary -&gt; org.hibernate.type.UUIDBinaryType@4678c730
- Adding type registration java.util.UUID -&gt; org.hibernate.type.UUIDBinaryType@4678c730
- Adding type registration uuid-char -&gt; org.hibernate.type.UUIDCharType@c038203
- Adding type registration pg-uuid -&gt; org.hibernate.type.PostgresUUIDType@cb5822
- Adding type registration binary -&gt; org.hibernate.type.BinaryType@4c70fda8
- Adding type registration byte[] -&gt; org.hibernate.type.BinaryType@4c70fda8
- Adding type registration [B -&gt; org.hibernate.type.BinaryType@4c70fda8
- Adding type registration wrapper-binary -&gt; org.hibernate.type.WrapperBinaryType@28d25987
- Adding type registration Byte[] -&gt; org.hibernate.type.WrapperBinaryType@28d25987
- Adding type registration [Ljava.lang.Byte; -&gt; org.hibernate.type.WrapperBinaryType@28d25987
- Adding type registration image -&gt; org.hibernate.type.ImageType@29774679
- Adding type registration characters -&gt; org.hibernate.type.CharArrayType@ae45eb6
- Adding type registration char[] -&gt; org.hibernate.type.CharArrayType@ae45eb6
- Adding type registration [C -&gt; org.hibernate.type.CharArrayType@ae45eb6
- Adding type registration wrapper-characters -&gt; org.hibernate.type.CharacterArrayType@66a3ffec
- Adding type registration [Ljava.lang.Character; -&gt; org.hibernate.type.CharacterArrayType@66a3ffec
- Adding type registration Character[] -&gt; org.hibernate.type.CharacterArrayType@66a3ffec
- Adding type registration text -&gt; org.hibernate.type.TextType@1bce4f0a
- Adding type registration ntext -&gt; org.hibernate.type.NTextType@6a4f787b
- Adding type registration blob -&gt; org.hibernate.type.BlobType@13deb50e
- Adding type registration java.sql.Blob -&gt; org.hibernate.type.BlobType@13deb50e
- Adding type registration materialized_blob -&gt; org.hibernate.type.MaterializedBlobType@57fffcd7
- Adding type registration clob -&gt; org.hibernate.type.ClobType@3f49dace
- Adding type registration java.sql.Clob -&gt; org.hibernate.type.ClobType@3f49dace
- Adding type registration nclob -&gt; org.hibernate.type.NClobType@4bec1f0c
- Adding type registration java.sql.NClob -&gt; org.hibernate.type.NClobType@4bec1f0c
- Adding type registration materialized_clob -&gt; org.hibernate.type.MaterializedClobType@6adede5
- Adding type registration materialized_nclob -&gt; org.hibernate.type.MaterializedNClobType@49993335
- Adding type registration serializable -&gt; org.hibernate.type.SerializableType@148080bb
- Adding type registration object -&gt; org.hibernate.type.ObjectType@71318ec4
- Adding type registration java.lang.Object -&gt; org.hibernate.type.ObjectType@71318ec4
- Adding type registration imm_date -&gt; org.hibernate.type.AdaptedImmutableType@3327bd23
- Adding type registration imm_time -&gt; org.hibernate.type.AdaptedImmutableType@4e1d422d
- Adding type registration imm_timestamp -&gt; org.hibernate.type.AdaptedImmutableType@66480dd7
- Adding type registration imm_dbtimestamp -&gt; org.hibernate.type.AdaptedImmutableType@52a86356
- Adding type registration imm_calendar -&gt; org.hibernate.type.AdaptedImmutableType@5ce81285
- Adding type registration imm_calendar_date -&gt; org.hibernate.type.AdaptedImmutableType@78c03f1f
- Adding type registration imm_binary -&gt; org.hibernate.type.AdaptedImmutableType@5ec0a365
- Adding type registration imm_serializable -&gt; org.hibernate.type.AdaptedImmutableType@4fe3c938
- HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
- HHH000412: Hibernate Core {4.3.11.Final}
- HHH000206: hibernate.properties not found
- HHH000021: Bytecode provider name : javassist
- Registering IdentifierGenerator strategy [uuid2] -&gt; [org.hibernate.id.UUIDGenerator]
- Registering IdentifierGenerator strategy [guid] -&gt; [org.hibernate.id.GUIDGenerator]
- Registering IdentifierGenerator strategy [uuid] -&gt; [org.hibernate.id.UUIDHexGenerator]
- Registering IdentifierGenerator strategy [uuid.hex] -&gt; [org.hibernate.id.UUIDHexGenerator]
- Registering IdentifierGenerator strategy [hilo] -&gt; [org.hibernate.id.TableHiLoGenerator]
- Registering IdentifierGenerator strategy [assigned] -&gt; [org.hibernate.id.Assigned]
- Registering IdentifierGenerator strategy [identity] -&gt; [org.hibernate.id.IdentityGenerator]
- Registering IdentifierGenerator strategy [select] -&gt; [org.hibernate.id.SelectGenerator]
- Registering IdentifierGenerator strategy [sequence] -&gt; [org.hibernate.id.SequenceGenerator]
- Registering IdentifierGenerator strategy [seqhilo] -&gt; [org.hibernate.id.SequenceHiLoGenerator]
- Registering IdentifierGenerator strategy [increment] -&gt; [org.hibernate.id.IncrementGenerator]
- Registering IdentifierGenerator strategy [foreign] -&gt; [org.hibernate.id.ForeignGenerator]
- Registering IdentifierGenerator strategy [sequence-identity] -&gt; [org.hibernate.id.SequenceIdentityGenerator]
- Registering IdentifierGenerator strategy [enhanced-sequence] -&gt; [org.hibernate.id.enhanced.SequenceStyleGenerator]
- Registering IdentifierGenerator strategy [enhanced-table] -&gt; [org.hibernate.id.enhanced.TableGenerator]
- HHH000043: Configuring from resource: hibernate.cfg.xml
- HHH000040: Configuration resource: hibernate.cfg.xml
- Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
- Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
- Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
- hibernate.connection.url=jdbc:oracle:thin:@project-zero.ced7fvnhpfjw.us-west-2.rds.amazonaws.com:1521:ORCL
- hibernate.connection.username=crandon
- hibernate.connection.password=RevaturE1!
- hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver
- hibernate.hbm2ddl.auto=validate
- hibernate.show_sql=true
- Session-factory config [null] named class [com.revature.models.Post] for mapping
- Session-factory config [null] named class [com.revature.models.User] for mapping
- Session-factory config [null] named class [com.revature.models.Comment] for mapping
- Session-factory config [null] named class [com.revature.models.Group] for mapping
- Session-factory config [null] named class [com.revature.models.Vote] for mapping
- HHH000041: Configured SessionFactory: null
- Properties: {hibernate.connection.password=RevaturE1!, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_181\jre\bin, java.vm.version=25.181-b13, hibernate.connection.username=crandon, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc, java.runtime.version=1.8.0_181-b13, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, basedir=C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_181\jre\lib\endorsed, os.arch=amd64, surefire.real.class.path=C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc\target\surefire\surefirebooter6259495993354891757.jar, java.io.tmpdir=C:\Users\Crandon\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Users\Crandon\bin;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\local\bin;C:\Program Files\Git\usr\bin;C:\Program Files\Git\usr\bin;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\Users\Crandon\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;D:\app\Crandon\product\12.2.0\dbhome_2\bin;D:\app\Crandon\product\12.2.0\dbhome_1\bin;D:\app\Crandon\product\12.2.0\dbhome_21\bin;D:\app\Crandon\virtual\product\12.2.0\dbhome_1\bin;C:\Program Files\Java\jdk1.8.0_181\bin;C:\Program Files\Java\jre1.8.0_181\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client;C:\Program Files\Intel\iCLS Client;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\WINDOWS\System32\OpenSSH;C:\Program Files\Git\cmd;D:\;C:\Program Files\dotnet;C:\Program Files\Microsoft SQL Server\130\Tools\Binn;C:\Program Files (x86)\dotnet;C:\Program Files\Microsoft VS Code\bin;C:\Users\Crandon\Downloads\apache-maven-3.5.4-src\apache-maven-3.5.4\apache-maven\src\bin;C:\Users\Crandon\Downloads\apache-maven-3.5.4-src\apache-maven-3.5.4;C:\Program Files\apache-maven-3.5.4\bin;C:\ProgramData\chocolatey\bin;C:\Ruby24-x64\bin;C:\Users\Crandon\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;C:\Users\Crandon\AppData\Roaming\npm;C:\Users\Crandon\AppData\Local\hyper\app-2.0.0\resources\bin;C:\Program Files\Git\usr\bin\vendor_perl;C:\Program Files\Git\usr\bin\core_perl;., surefire.test.class.path=C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc\target\test-classes;C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc\target\classes;C:\Users\Crandon\.m2\repository\org\springframework\spring-context\4.3.3.RELEASE\spring-context-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-aop\4.3.3.RELEASE\spring-aop-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-beans\4.3.3.RELEASE\spring-beans-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-core\4.3.3.RELEASE\spring-core-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-expression\4.3.3.RELEASE\spring-expression-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-webmvc\4.3.3.RELEASE\spring-webmvc-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-web\4.3.3.RELEASE\spring-web-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Crandon\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\Crandon\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.6.3\jackson-databind-2.6.3.jar;C:\Users\Crandon\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.6.0\jackson-annotations-2.6.0.jar;C:\Users\Crandon\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.6.3\jackson-core-2.6.3.jar;C:\Users\Crandon\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Crandon\.m2\repository\com\oracle\ojdbc7\12.1.0\ojdbc7-12.1.0.jar;C:\Users\Crandon\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Crandon\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Crandon\.m2\repository\org\hibernate\hibernate-core\4.3.11.Final\hibernate-core-4.3.11.Final.jar;C:\Users\Crandon\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\Crandon\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\Crandon\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\Crandon\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Crandon\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Crandon\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\Crandon\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Crandon\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\Crandon\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Crandon\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\Crandon\.m2\repository\com\auth0\java-jwt\3.4.0\java-jwt-3.4.0.jar;C:\Users\Crandon\.m2\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Crandon, user.timezone=, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1252, java.specification.version=1.8, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, java.class.path=C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc\target\test-classes;C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc\target\classes;C:\Users\Crandon\.m2\repository\org\springframework\spring-context\4.3.3.RELEASE\spring-context-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-aop\4.3.3.RELEASE\spring-aop-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-beans\4.3.3.RELEASE\spring-beans-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-core\4.3.3.RELEASE\spring-core-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-expression\4.3.3.RELEASE\spring-expression-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-webmvc\4.3.3.RELEASE\spring-webmvc-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-web\4.3.3.RELEASE\spring-web-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Crandon\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\Crandon\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.6.3\jackson-databind-2.6.3.jar;C:\Users\Crandon\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.6.0\jackson-annotations-2.6.0.jar;C:\Users\Crandon\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.6.3\jackson-core-2.6.3.jar;C:\Users\Crandon\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Crandon\.m2\repository\com\oracle\ojdbc7\12.1.0\ojdbc7-12.1.0.jar;C:\Users\Crandon\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Crandon\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Crandon\.m2\repository\org\hibernate\hibernate-core\4.3.11.Final\hibernate-core-4.3.11.Final.jar;C:\Users\Crandon\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\Crandon\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\Crandon\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\Crandon\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Crandon\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Crandon\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\Crandon\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Crandon\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\Crandon\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Crandon\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\Crandon\.m2\repository\com\auth0\java-jwt\3.4.0\java-jwt-3.4.0.jar;C:\Users\Crandon\.m2\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;, user.name=Crandon, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.java.command=C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc\target\surefire\surefirebooter6259495993354891757.jar C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc\target\surefire\surefire8054844043107407047tmp C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc\target\surefire\surefire_07169583070648549555tmp, java.home=C:\Program Files\Java\jdk1.8.0_181\jre, sun.arch.data.model=64, hibernate.connection.url=jdbc:oracle:thin:@project-zero.ced7fvnhpfjw.us-west-2.rds.amazonaws.com:1521:ORCL, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_181, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_181\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_181\jre\classes, java.vendor=Oracle Corporation, localRepository=C:\Users\Crandon\.m2\repository, file.separator=\, hibernate.hbm2ddl.auto=validate, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
- Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
- Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
- Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
- Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -&gt; [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
- Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -&gt; [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
- Overriding existing service binding [org.hibernate.secure.spi.JaccService]
- Preparing to build session factory with filters : {}
- HHH000402: Using Hibernate built-in connection pool (not for production use!)
- HHH000401: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@project-zero.ced7fvnhpfjw.us-west-2.rds.amazonaws.com:1521:ORCL]
- HHH000046: Connection properties: {user=crandon, password=RevaturE1!}
- HHH000006: Autocommit mode: false
- HHH000115: Hibernate connection pool size: 20 (min=1)
- Initializing Connection pool with 1 Connections
- Database -&gt;
       name : Oracle
    version : Oracle Database 12c Enterprise Edition Release 12.1.0.2.0 - 64bit Production
With the Partitioning, OLAP, Advanced Analytics and Real Application Testing options
      major : 12
      minor : 1
- Driver -&gt;
       name : Oracle JDBC driver
    version : 12.1.0.1.0
      major : 12
      minor : 1
- JDBC version : 4.1
- Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
- HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
- Processing hbm.xml files
- Process annotated classes
- Binding entity from annotated class: com.revature.models.Post
- Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
- No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
- Import with entity name Post
- Bind entity com.revature.models.Post on table Post
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=id, insertable=true, updatable=true, unique=false}
- MetadataSourceProcessor property id with lazy=false
- Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Post:id]
- building SimpleValue for id
- Building property id
- Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;post&apos;}
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=comments, insertable=true, updatable=true, unique=false}
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=null, insertable=true, updatable=true, unique=false}
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=element, insertable=true, updatable=true, unique=false}
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=comments_KEY, insertable=true, updatable=true, unique=false}
- Binding column: Ejb3JoinColumn{logicalColumnName=&apos;comments_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
- Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;post&apos;}
- Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;post&apos;}
- Collection role: com.revature.models.Post.comments
- Building property comments
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=content, insertable=true, updatable=true, unique=false}
- MetadataSourceProcessor property content with lazy=false
- Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Post:content]
- building SimpleValue for content
- Building property content
- Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=group, insertable=true, updatable=true, unique=false}
- Building property group
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=imageUrl, insertable=true, updatable=true, unique=false}
- MetadataSourceProcessor property imageUrl with lazy=false
- Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Post:imageUrl]
- building SimpleValue for imageUrl
- Building property imageUrl
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=title, insertable=true, updatable=true, unique=false}
- MetadataSourceProcessor property title with lazy=false
- Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Post:title]
- building SimpleValue for title
- Building property title
- Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=user, insertable=true, updatable=true, unique=false}
- Building property user
- Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;id.postId&apos;}
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=votes, insertable=true, updatable=true, unique=false}
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=null, insertable=true, updatable=true, unique=false}
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=element, insertable=true, updatable=true, unique=false}
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=votes_KEY, insertable=true, updatable=true, unique=false}
- Binding column: Ejb3JoinColumn{logicalColumnName=&apos;votes_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
- Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;id.postId&apos;}
- Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;id.postId&apos;}
- Collection role: com.revature.models.Post.votes
- Building property votes
- Binding entity from annotated class: com.revature.models.User
- Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
- No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
- Import with entity name User
- Bind entity com.revature.models.User on table USERS
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
- MetadataSourceProcessor property id with lazy=false
- Attempting to locate auto-apply AttributeConverter for property [com.revature.models.User:id]
- building SimpleValue for id
- Building property id
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=null, insertable=true, updatable=true, unique=false}
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=element, insertable=true, updatable=true, unique=false}
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=groups_KEY, insertable=true, updatable=true, unique=false}
- Binding column: Ejb3JoinColumn{logicalColumnName=&apos;groups_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
- Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;users&apos;}
- Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;users&apos;}
- Collection role: com.revature.models.User.groups
- Building property groups
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=nickname, insertable=true, updatable=true, unique=false}
- MetadataSourceProcessor property nickname with lazy=false
- Attempting to locate auto-apply AttributeConverter for property [com.revature.models.User:nickname]
- building SimpleValue for nickname
- Building property nickname
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=role, insertable=true, updatable=true, unique=false}
- MetadataSourceProcessor property role with lazy=false
- Attempting to locate auto-apply AttributeConverter for property [com.revature.models.User:role]
- building SimpleValue for role
- Building property role
- Binding entity from annotated class: com.revature.models.Comment
- Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
- No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
- Import with entity name Comment
- Bind entity com.revature.models.Comment on table COMMENTS
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COMMENTS), mappingColumn=id, insertable=true, updatable=true, unique=false}
- MetadataSourceProcessor property id with lazy=false
- Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Comment:id]
- building SimpleValue for id
- Building property id
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COMMENTS), mappingColumn=content, insertable=true, updatable=true, unique=false}
- MetadataSourceProcessor property content with lazy=false
- Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Comment:content]
- building SimpleValue for content
- Building property content
- Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COMMENTS), mappingColumn=post, insertable=true, updatable=true, unique=false}
- Building property post
- Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COMMENTS), mappingColumn=user, insertable=true, updatable=true, unique=false}
- Building property user
- Binding entity from annotated class: com.revature.models.Group
- Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
- No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
- Import with entity name Group
- Bind entity com.revature.models.Group on table GROUPS
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GROUPS), mappingColumn=id, insertable=true, updatable=true, unique=false}
- MetadataSourceProcessor property id with lazy=false
- Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Group:id]
- building SimpleValue for id
- Building property id
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GROUPS), mappingColumn=GROUP_NAME, insertable=true, updatable=true, unique=true}
- MetadataSourceProcessor property name with lazy=false
- Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Group:name]
- building SimpleValue for name
- Building property name
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GROUPS), mappingColumn=null, insertable=true, updatable=true, unique=false}
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GROUPS), mappingColumn=element, insertable=true, updatable=true, unique=false}
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GROUPS), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
- Binding column: Ejb3JoinColumn{logicalColumnName=&apos;users_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
- Binding column: Ejb3JoinColumn{logicalColumnName=&apos;name&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
- Binding column: Ejb3JoinColumn{logicalColumnName=&apos;id&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
- Collection role: com.revature.models.Group.users
- Building property users
- Binding entity from annotated class: com.revature.models.Vote
- Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
- No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
- Import with entity name Vote
- Bind entity com.revature.models.Vote on table Vote
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Vote), mappingColumn=id, insertable=true, updatable=true, unique=false}
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Vote), mappingColumn=postId, insertable=true, updatable=true, unique=false}
- MetadataSourceProcessor property postId with lazy=false
- Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Vote.id:postId]
- building SimpleValue for postId
- Building property postId
- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Vote), mappingColumn=userId, insertable=true, updatable=true, unique=false}
- MetadataSourceProcessor property userId with lazy=false
- Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Vote.id:userId]
- building SimpleValue for userId
- Building property userId
- Building property id
- Starting fillSimpleValue for id
- Starting fillSimpleValue for content
- Starting fillSimpleValue for imageUrl
- Starting fillSimpleValue for title
- Starting fillSimpleValue for id
- Starting fillSimpleValue for nickname
- Starting fillSimpleValue for role
- Starting fillSimpleValue for id
- Starting fillSimpleValue for content
- Starting fillSimpleValue for id
- Starting fillSimpleValue for name
- Starting fillSimpleValue for postId
- Starting fillSimpleValue for userId
- Processing fk mappings (*ToOne and JoinedSubclass)
- Processing extends queue
- Processing extends queue
- Processing collection mappings
- Second pass for collection: com.revature.models.Group.users
- Binding as ManyToMany: com.revature.models.Group.users
- Mapped collection key: name, element: id
- Second pass for collection: com.revature.models.Post.comments
- Binding a OneToMany: com.revature.models.Post.comments through a foreign key
- Mapping collection: com.revature.models.Post.comments -&gt; COMMENTS
- Retrieving property com.revature.models.Comment.post
- Mapped collection key: post_id, one-to-many: com.revature.models.Comment
- Second pass for collection: com.revature.models.Post.votes
- Binding a OneToMany: com.revature.models.Post.votes through a foreign key
- Mapping collection: com.revature.models.Post.votes -&gt; Vote
- Retrieving property com.revature.models.Vote.id.postId
- Mapped collection key: postId, one-to-many: com.revature.models.Vote
- Second pass for collection: com.revature.models.User.groups
- Binding as ManyToMany: com.revature.models.User.groups
- Retrieving property com.revature.models.Group.users
- Mapped collection key: id, element: name
- Processing native query and ResultSetMapping mappings
- Processing association property references
- Creating tables&apos; unique integer identifiers
- Processing foreign key constraints
- Resolving reference to class: com.revature.models.Post
- Resolving reference to class: com.revature.models.User
- Resolving reference to class: com.revature.models.User
- Resolving reference to class: com.revature.models.Group
- Resolving reference to class: com.revature.models.Group
- Resolving reference to class: com.revature.models.User
- Resolving reference to class: com.revature.models.Post
- No JtaPlatform was specified, checking resolver
- No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
- Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
- Automatic flush during beforeCompletion(): disabled
- Automatic session close at end of transaction: disabled
- JDBC batch size: 15
- JDBC batch updates for versioned data: disabled
- Scrollable result sets: enabled
- Wrap result sets: disabled
- JDBC3 getGeneratedKeys(): disabled
- multi-tenancy strategy : NONE
- Connection release mode: auto
- HHH000399: Using default transaction strategy (direct JDBC transactions)
- Using BatchFetchStyle : LEGACY
- Default batch fetch size: 1
- Generate SQL with comments: disabled
- Order SQL updates by primary key: disabled
- Order SQL inserts for batching: disabled
- Default null ordering: none
- Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
- HHH000397: Using ASTQueryTranslatorFactory
- Query language substitutions: {}
- JPA-QL strict compliance: disabled
- Second-level cache: enabled
- Query cache: disabled
- Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
- Optimize cache for minimal puts: disabled
- Structured second-level cache entries: disabled
- Second-level cache direct-reference entries: disabled
- Automatic eviction of collection cache: disabled
- Statistics: disabled
- Deleted entity synthetic identifier rollback: disabled
- Default entity-mode: pojo
- Named query checking : enabled
- Check Nullability in Core (should be disabled when Bean Validation is on): enabled
- Allow initialization of lazy state outside session : : disabled
- JTA Track by Thread: enabled
- Building session factory
- Session factory constructed with filter configurations : {}
- Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=RevaturE1!, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_181\jre\bin, java.vm.version=25.181-b13, hibernate.connection.username=crandon, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc, java.runtime.version=1.8.0_181-b13, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, basedir=C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_181\jre\lib\endorsed, os.arch=amd64, surefire.real.class.path=C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc\target\surefire\surefirebooter6259495993354891757.jar, java.io.tmpdir=C:\Users\Crandon\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Users\Crandon\bin;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\local\bin;C:\Program Files\Git\usr\bin;C:\Program Files\Git\usr\bin;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\Users\Crandon\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;D:\app\Crandon\product\12.2.0\dbhome_2\bin;D:\app\Crandon\product\12.2.0\dbhome_1\bin;D:\app\Crandon\product\12.2.0\dbhome_21\bin;D:\app\Crandon\virtual\product\12.2.0\dbhome_1\bin;C:\Program Files\Java\jdk1.8.0_181\bin;C:\Program Files\Java\jre1.8.0_181\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client;C:\Program Files\Intel\iCLS Client;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\WINDOWS\System32\OpenSSH;C:\Program Files\Git\cmd;D:\;C:\Program Files\dotnet;C:\Program Files\Microsoft SQL Server\130\Tools\Binn;C:\Program Files (x86)\dotnet;C:\Program Files\Microsoft VS Code\bin;C:\Users\Crandon\Downloads\apache-maven-3.5.4-src\apache-maven-3.5.4\apache-maven\src\bin;C:\Users\Crandon\Downloads\apache-maven-3.5.4-src\apache-maven-3.5.4;C:\Program Files\apache-maven-3.5.4\bin;C:\ProgramData\chocolatey\bin;C:\Ruby24-x64\bin;C:\Users\Crandon\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;C:\Users\Crandon\AppData\Roaming\npm;C:\Users\Crandon\AppData\Local\hyper\app-2.0.0\resources\bin;C:\Program Files\Git\usr\bin\vendor_perl;C:\Program Files\Git\usr\bin\core_perl;., surefire.test.class.path=C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc\target\test-classes;C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc\target\classes;C:\Users\Crandon\.m2\repository\org\springframework\spring-context\4.3.3.RELEASE\spring-context-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-aop\4.3.3.RELEASE\spring-aop-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-beans\4.3.3.RELEASE\spring-beans-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-core\4.3.3.RELEASE\spring-core-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-expression\4.3.3.RELEASE\spring-expression-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-webmvc\4.3.3.RELEASE\spring-webmvc-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-web\4.3.3.RELEASE\spring-web-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Crandon\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\Crandon\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.6.3\jackson-databind-2.6.3.jar;C:\Users\Crandon\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.6.0\jackson-annotations-2.6.0.jar;C:\Users\Crandon\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.6.3\jackson-core-2.6.3.jar;C:\Users\Crandon\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Crandon\.m2\repository\com\oracle\ojdbc7\12.1.0\ojdbc7-12.1.0.jar;C:\Users\Crandon\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Crandon\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Crandon\.m2\repository\org\hibernate\hibernate-core\4.3.11.Final\hibernate-core-4.3.11.Final.jar;C:\Users\Crandon\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\Crandon\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\Crandon\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\Crandon\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Crandon\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Crandon\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\Crandon\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Crandon\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\Crandon\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Crandon\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\Crandon\.m2\repository\com\auth0\java-jwt\3.4.0\java-jwt-3.4.0.jar;C:\Users\Crandon\.m2\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\Crandon, user.timezone=, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, user.name=Crandon, java.class.path=C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc\target\test-classes;C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc\target\classes;C:\Users\Crandon\.m2\repository\org\springframework\spring-context\4.3.3.RELEASE\spring-context-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-aop\4.3.3.RELEASE\spring-aop-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-beans\4.3.3.RELEASE\spring-beans-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-core\4.3.3.RELEASE\spring-core-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-expression\4.3.3.RELEASE\spring-expression-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-webmvc\4.3.3.RELEASE\spring-webmvc-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\org\springframework\spring-web\4.3.3.RELEASE\spring-web-4.3.3.RELEASE.jar;C:\Users\Crandon\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Crandon\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\Crandon\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.6.3\jackson-databind-2.6.3.jar;C:\Users\Crandon\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.6.0\jackson-annotations-2.6.0.jar;C:\Users\Crandon\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.6.3\jackson-core-2.6.3.jar;C:\Users\Crandon\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Crandon\.m2\repository\com\oracle\ojdbc7\12.1.0\ojdbc7-12.1.0.jar;C:\Users\Crandon\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Crandon\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Crandon\.m2\repository\org\hibernate\hibernate-core\4.3.11.Final\hibernate-core-4.3.11.Final.jar;C:\Users\Crandon\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\Crandon\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\Crandon\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\Crandon\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Crandon\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Crandon\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\Crandon\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Crandon\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\Crandon\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Crandon\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\Crandon\.m2\repository\com\auth0\java-jwt\3.4.0\java-jwt-3.4.0.jar;C:\Users\Crandon\.m2\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0_181\jre, sun.java.command=C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc\target\surefire\surefirebooter6259495993354891757.jar C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc\target\surefire\surefire8054844043107407047tmp C:\Users\Crandon\Documents\workspace-sts-3.9.5.RELEASE\jenkins\p2-mvc\target\surefire\surefire_07169583070648549555tmp, hibernate.connection.url=jdbc:oracle:thin:@project-zero.ced7fvnhpfjw.us-west-2.rds.amazonaws.com:1521:ORCL, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_181, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_181\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_181\jre\classes, java.vendor=Oracle Corporation, localRepository=C:\Users\Crandon\.m2\repository, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
- Skipping JACC integration as it was not enabled
- Setting dialect [org.hibernate.dialect.Oracle10gDialect]
- Setting dialect [org.hibernate.dialect.Oracle10gDialect]
- Setting dialect [org.hibernate.dialect.Oracle10gDialect]
- Setting dialect [org.hibernate.dialect.Oracle10gDialect]
- Static SQL for collection: com.revature.models.Group.users
-  Row insert: insert into GROUPS_USERS (name, id) values (?, ?)
-  Row update: update GROUPS_USERS set id=? where name=? and id=?
-  Row delete: delete from GROUPS_USERS where name=? and id=?
-  One-shot delete: delete from GROUPS_USERS where name=?
- Static SQL for collection: com.revature.models.Post.votes
-  Row insert: update Vote set postId=? where postId=? and userId=?
-  Row update: update Vote set  where postId=? and userId=?
-  Row delete: update Vote set postId=null where postId=? and userId=?
-  One-shot delete: update Vote set postId=null where postId=?
- Static SQL for collection: com.revature.models.Post.comments
-  Row insert: update COMMENTS set post_id=? where id=?
-  Row update: update COMMENTS set  where id=?
-  Row delete: update COMMENTS set post_id=null where post_id=? and id=?
-  One-shot delete: update COMMENTS set post_id=null where post_id=?
- Static SQL for collection: com.revature.models.User.groups
-  Row insert: insert into GROUPS_USERS (id, name) values (?, ?)
-  Row update: update GROUPS_USERS set name=? where id=? and name=?
-  Row delete: delete from GROUPS_USERS where id=? and name=?
-  One-shot delete: delete from GROUPS_USERS where id=?
- Static SQL for entity: com.revature.models.Post
-  Version select: select id from Post where id =?
-  Snapshot select: select post_.id, post_.content as content2_3_, post_.group_id as group_id5_3_, post_.imageUrl as imageUrl3_3_, post_.title as title4_3_, post_.user_id as user_id6_3_ from Post post_ where post_.id=?
-  Insert 0: insert into Post (group_id, imageUrl, title, user_id, id, content) values (?, ?, ?, ?, ?, ?)
-  Update 0: update Post set group_id=?, imageUrl=?, title=?, user_id=?, content=? where id=?
-  Delete 0: delete from Post where id=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3724af13]
- Visiting attribute path : comments
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c7b5824]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c2db68f]
- Visiting attribute path : comments.content
- Visiting attribute path : comments.post
- Property path deemed to be circular : comments.post
- Visiting attribute path : comments.user
- Adding QuerySpace : uid = &lt;gen:3&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ec2cc4]
- Visiting attribute path : comments.user.groups
- Adding QuerySpace : uid = &lt;gen:4&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52d645b1]
- Adding QuerySpace : uid = &lt;gen:5&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2101b44a]
- Visiting attribute path : comments.user.groups.name
- Visiting attribute path : comments.user.groups.users
- Property path deemed to be circular : comments.user.groups.users
- Visiting attribute path : comments.user.nickname
- Visiting attribute path : comments.user.role
- Visiting attribute path : content
- Visiting attribute path : group
- Adding QuerySpace : uid = &lt;gen:6&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@119020fb]
- Visiting attribute path : group.name
- Visiting attribute path : group.users
- Property path deemed to be circular : group.users
- Visiting attribute path : imageUrl
- Visiting attribute path : title
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:7&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c055c54]
- Visiting attribute path : user.groups
- Property path deemed to be circular : user.groups
- Visiting attribute path : user.nickname
- Visiting attribute path : user.role
- Visiting attribute path : votes
- Adding QuerySpace : uid = &lt;gen:8&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35e5d0e5]
- Adding QuerySpace : uid = &lt;gen:9&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73173f63]
- Adding QuerySpace : uid = &lt;gen:9&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5066d65f]
- Visiting attribute path : votes.postId
- Visiting attribute path : votes.userId
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Post)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.comments, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Post.comments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Post.comments.&lt;elements&gt;)
                - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:3&gt;, path=com.revature.models.Post.comments.&lt;elements&gt;.user)
                   - CollectionAttributeFetchImpl(collection=com.revature.models.User.groups, querySpaceUid=&lt;gen:4&gt;, path=com.revature.models.Post.comments.&lt;elements&gt;.user.groups)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Group, querySpaceUid=&lt;gen:5&gt;, path=com.revature.models.Post.comments.&lt;elements&gt;.user.groups.&lt;elements&gt;)
          - EntityAttributeFetchImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:6&gt;, path=com.revature.models.Post.group)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:7&gt;, path=com.revature.models.Post.user)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.votes, querySpaceUid=&lt;gen:8&gt;, path=com.revature.models.Post.votes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:9&gt;, path=com.revature.models.Post.votes.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(comments)) : &lt;gen:0&gt; -&gt; &lt;gen:1&gt;
             - CollectionQuerySpaceImpl(uid=&lt;gen:1&gt;, collection=com.revature.models.Post.comments)
                - SQL table alias mapping - comments1_
                - alias suffix - 1_
                - suffixed key columns - {post_id3_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : &lt;gen:1&gt; -&gt; &lt;gen:2&gt;
                   - EntityQuerySpaceImpl(uid=&lt;gen:2&gt;, entity=com.revature.models.Comment)
                      - SQL table alias mapping - comments1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(user)) : &lt;gen:2&gt; -&gt; &lt;gen:3&gt;
                         - EntityQuerySpaceImpl(uid=&lt;gen:3&gt;, entity=com.revature.models.User)
                            - SQL table alias mapping - user2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_4_3_}
                            - JOIN (JoinDefinedByMetadata(groups)) : &lt;gen:3&gt; -&gt; &lt;gen:4&gt;
                               - CollectionQuerySpaceImpl(uid=&lt;gen:4&gt;, collection=com.revature.models.User.groups)
                                  - SQL table alias mapping - groups3_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id2_4_4_}
                                  - entity-element alias suffix - 5_
                                  - 5_entity-element suffixed key columns - id1_1_5_
                                  - JOIN (JoinDefinedByMetadata(elements)) : &lt;gen:4&gt; -&gt; &lt;gen:5&gt;
                                     - EntityQuerySpaceImpl(uid=&lt;gen:5&gt;, entity=com.revature.models.Group)
                                        - SQL table alias mapping - group4_
                                        - alias suffix - 5_
                                        - suffixed key columns - {id1_1_5_}
          - JOIN (JoinDefinedByMetadata(group)) : &lt;gen:0&gt; -&gt; &lt;gen:6&gt;
             - EntityQuerySpaceImpl(uid=&lt;gen:6&gt;, entity=com.revature.models.Group)
                - SQL table alias mapping - group5_
                - alias suffix - 6_
                - suffixed key columns - {id1_1_6_}
          - JOIN (JoinDefinedByMetadata(user)) : &lt;gen:0&gt; -&gt; &lt;gen:7&gt;
             - EntityQuerySpaceImpl(uid=&lt;gen:7&gt;, entity=com.revature.models.User)
                - SQL table alias mapping - user6_
                - alias suffix - 7_
                - suffixed key columns - {id1_4_7_}
          - JOIN (JoinDefinedByMetadata(votes)) : &lt;gen:0&gt; -&gt; &lt;gen:8&gt;
             - CollectionQuerySpaceImpl(uid=&lt;gen:8&gt;, collection=com.revature.models.Post.votes)
                - SQL table alias mapping - votes7_
                - alias suffix - 8_
                - suffixed key columns - {postId1_3_8_}
                - entity-element alias suffix - 9_
                - 9_entity-element suffixed key columns - postId1_5_9_, userId2_5_9_
                - JOIN (JoinDefinedByMetadata(elements)) : &lt;gen:8&gt; -&gt; &lt;gen:9&gt;
                   - EntityQuerySpaceImpl(uid=&lt;gen:9&gt;, entity=com.revature.models.Vote)
                      - SQL table alias mapping - votes7_
                      - alias suffix - 9_
                      - suffixed key columns - {postId1_5_9_, userId2_5_9_}
                      - JOIN (JoinDefinedByMetadata(id)) : &lt;gen:9&gt; -&gt; &lt;gen:9&gt;-id
                         - CompositeQuerySpaceImpl(uid=&lt;gen:9&gt;-id)
                            - SQL table alias mapping - votes7_

- Static select for entity com.revature.models.Post [NONE]: select post0_.id as id1_3_0_, post0_.content as content2_3_0_, post0_.group_id as group_id5_3_0_, post0_.imageUrl as imageUrl3_3_0_, post0_.title as title4_3_0_, post0_.user_id as user_id6_3_0_, comments1_.post_id as post_id3_3_1_, comments1_.id as id1_0_1_, comments1_.id as id1_0_2_, comments1_.content as content2_0_2_, comments1_.post_id as post_id3_0_2_, comments1_.user_id as user_id4_0_2_, user2_.id as id1_4_3_, user2_.nickname as nickname2_4_3_, user2_.role as role3_4_3_, groups3_.id as id2_4_4_, group4_.id as name1_2_4_, group4_.id as id1_1_5_, group4_.GROUP_NAME as GROUP_NAME2_1_5_, group5_.id as id1_1_6_, group5_.GROUP_NAME as GROUP_NAME2_1_6_, user6_.id as id1_4_7_, user6_.nickname as nickname2_4_7_, user6_.role as role3_4_7_, votes7_.postId as postId1_3_8_, votes7_.postId as postId1_5_8_, votes7_.userId as userId2_5_8_, votes7_.postId as postId1_5_9_, votes7_.userId as userId2_5_9_ from Post post0_ left outer join COMMENTS comments1_ on post0_.id=comments1_.post_id left outer join USERS user2_ on comments1_.user_id=user2_.id left outer join GROUPS_USERS groups3_ on user2_.id=groups3_.id left outer join GROUPS group4_ on groups3_.name=group4_.id left outer join GROUPS group5_ on post0_.group_id=group5_.id left outer join USERS user6_ on post0_.user_id=user6_.id left outer join Vote votes7_ on post0_.id=votes7_.postId where post0_.id=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a85c92]
- Visiting attribute path : comments
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4795ded0]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53dacd14]
- Visiting attribute path : comments.content
- Visiting attribute path : comments.post
- Property path deemed to be circular : comments.post
- Visiting attribute path : comments.user
- Adding QuerySpace : uid = &lt;gen:3&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47c4ecdc]
- Visiting attribute path : comments.user.groups
- Adding QuerySpace : uid = &lt;gen:4&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c8504fd]
- Adding QuerySpace : uid = &lt;gen:5&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b7e96a]
- Visiting attribute path : comments.user.groups.name
- Visiting attribute path : comments.user.groups.users
- Property path deemed to be circular : comments.user.groups.users
- Visiting attribute path : comments.user.nickname
- Visiting attribute path : comments.user.role
- Visiting attribute path : content
- Visiting attribute path : group
- Adding QuerySpace : uid = &lt;gen:6&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bd1f8dd]
- Visiting attribute path : group.name
- Visiting attribute path : group.users
- Property path deemed to be circular : group.users
- Visiting attribute path : imageUrl
- Visiting attribute path : title
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:7&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e14c16d]
- Visiting attribute path : user.groups
- Property path deemed to be circular : user.groups
- Visiting attribute path : user.nickname
- Visiting attribute path : user.role
- Visiting attribute path : votes
- Adding QuerySpace : uid = &lt;gen:8&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@784b990c]
- Adding QuerySpace : uid = &lt;gen:9&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d3ba765]
- Adding QuerySpace : uid = &lt;gen:9&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@25bc0606]
- Visiting attribute path : votes.postId
- Visiting attribute path : votes.userId
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Post)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.comments, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Post.comments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Post.comments.&lt;elements&gt;)
                - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:3&gt;, path=com.revature.models.Post.comments.&lt;elements&gt;.user)
                   - CollectionAttributeFetchImpl(collection=com.revature.models.User.groups, querySpaceUid=&lt;gen:4&gt;, path=com.revature.models.Post.comments.&lt;elements&gt;.user.groups)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Group, querySpaceUid=&lt;gen:5&gt;, path=com.revature.models.Post.comments.&lt;elements&gt;.user.groups.&lt;elements&gt;)
          - EntityAttributeFetchImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:6&gt;, path=com.revature.models.Post.group)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:7&gt;, path=com.revature.models.Post.user)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.votes, querySpaceUid=&lt;gen:8&gt;, path=com.revature.models.Post.votes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:9&gt;, path=com.revature.models.Post.votes.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(comments)) : &lt;gen:0&gt; -&gt; &lt;gen:1&gt;
             - CollectionQuerySpaceImpl(uid=&lt;gen:1&gt;, collection=com.revature.models.Post.comments)
                - SQL table alias mapping - comments1_
                - alias suffix - 1_
                - suffixed key columns - {post_id3_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : &lt;gen:1&gt; -&gt; &lt;gen:2&gt;
                   - EntityQuerySpaceImpl(uid=&lt;gen:2&gt;, entity=com.revature.models.Comment)
                      - SQL table alias mapping - comments1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(user)) : &lt;gen:2&gt; -&gt; &lt;gen:3&gt;
                         - EntityQuerySpaceImpl(uid=&lt;gen:3&gt;, entity=com.revature.models.User)
                            - SQL table alias mapping - user2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_4_3_}
                            - JOIN (JoinDefinedByMetadata(groups)) : &lt;gen:3&gt; -&gt; &lt;gen:4&gt;
                               - CollectionQuerySpaceImpl(uid=&lt;gen:4&gt;, collection=com.revature.models.User.groups)
                                  - SQL table alias mapping - groups3_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id2_4_4_}
                                  - entity-element alias suffix - 5_
                                  - 5_entity-element suffixed key columns - id1_1_5_
                                  - JOIN (JoinDefinedByMetadata(elements)) : &lt;gen:4&gt; -&gt; &lt;gen:5&gt;
                                     - EntityQuerySpaceImpl(uid=&lt;gen:5&gt;, entity=com.revature.models.Group)
                                        - SQL table alias mapping - group4_
                                        - alias suffix - 5_
                                        - suffixed key columns - {id1_1_5_}
          - JOIN (JoinDefinedByMetadata(group)) : &lt;gen:0&gt; -&gt; &lt;gen:6&gt;
             - EntityQuerySpaceImpl(uid=&lt;gen:6&gt;, entity=com.revature.models.Group)
                - SQL table alias mapping - group5_
                - alias suffix - 6_
                - suffixed key columns - {id1_1_6_}
          - JOIN (JoinDefinedByMetadata(user)) : &lt;gen:0&gt; -&gt; &lt;gen:7&gt;
             - EntityQuerySpaceImpl(uid=&lt;gen:7&gt;, entity=com.revature.models.User)
                - SQL table alias mapping - user6_
                - alias suffix - 7_
                - suffixed key columns - {id1_4_7_}
          - JOIN (JoinDefinedByMetadata(votes)) : &lt;gen:0&gt; -&gt; &lt;gen:8&gt;
             - CollectionQuerySpaceImpl(uid=&lt;gen:8&gt;, collection=com.revature.models.Post.votes)
                - SQL table alias mapping - votes7_
                - alias suffix - 8_
                - suffixed key columns - {postId1_3_8_}
                - entity-element alias suffix - 9_
                - 9_entity-element suffixed key columns - postId1_5_9_, userId2_5_9_
                - JOIN (JoinDefinedByMetadata(elements)) : &lt;gen:8&gt; -&gt; &lt;gen:9&gt;
                   - EntityQuerySpaceImpl(uid=&lt;gen:9&gt;, entity=com.revature.models.Vote)
                      - SQL table alias mapping - votes7_
                      - alias suffix - 9_
                      - suffixed key columns - {postId1_5_9_, userId2_5_9_}
                      - JOIN (JoinDefinedByMetadata(id)) : &lt;gen:9&gt; -&gt; &lt;gen:9&gt;-id
                         - CompositeQuerySpaceImpl(uid=&lt;gen:9&gt;-id)
                            - SQL table alias mapping - votes7_

- Static select for entity com.revature.models.Post [READ]: select post0_.id as id1_3_0_, post0_.content as content2_3_0_, post0_.group_id as group_id5_3_0_, post0_.imageUrl as imageUrl3_3_0_, post0_.title as title4_3_0_, post0_.user_id as user_id6_3_0_, comments1_.post_id as post_id3_3_1_, comments1_.id as id1_0_1_, comments1_.id as id1_0_2_, comments1_.content as content2_0_2_, comments1_.post_id as post_id3_0_2_, comments1_.user_id as user_id4_0_2_, user2_.id as id1_4_3_, user2_.nickname as nickname2_4_3_, user2_.role as role3_4_3_, groups3_.id as id2_4_4_, group4_.id as name1_2_4_, group4_.id as id1_1_5_, group4_.GROUP_NAME as GROUP_NAME2_1_5_, group5_.id as id1_1_6_, group5_.GROUP_NAME as GROUP_NAME2_1_6_, user6_.id as id1_4_7_, user6_.nickname as nickname2_4_7_, user6_.role as role3_4_7_, votes7_.postId as postId1_3_8_, votes7_.postId as postId1_5_8_, votes7_.userId as userId2_5_8_, votes7_.postId as postId1_5_9_, votes7_.userId as userId2_5_9_ from Post post0_ left outer join COMMENTS comments1_ on post0_.id=comments1_.post_id left outer join USERS user2_ on comments1_.user_id=user2_.id left outer join GROUPS_USERS groups3_ on user2_.id=groups3_.id left outer join GROUPS group4_ on groups3_.name=group4_.id left outer join GROUPS group5_ on post0_.group_id=group5_.id left outer join USERS user6_ on post0_.user_id=user6_.id left outer join Vote votes7_ on post0_.id=votes7_.postId where post0_.id=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c18016b]
- Visiting attribute path : comments
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43aaf813]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57ac5227]
- Visiting attribute path : content
- Visiting attribute path : group
- Adding QuerySpace : uid = &lt;gen:3&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ba302e0]
- Visiting attribute path : imageUrl
- Visiting attribute path : title
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:4&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e98770d]
- Visiting attribute path : votes
- Adding QuerySpace : uid = &lt;gen:5&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ae67cad]
- Adding QuerySpace : uid = &lt;gen:6&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f6e28bc]
- Adding QuerySpace : uid = &lt;gen:6&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7c098bb3]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Post)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.comments, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Post.comments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Post.comments.&lt;elements&gt;)
          - EntityAttributeFetchImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:3&gt;, path=com.revature.models.Post.group)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:4&gt;, path=com.revature.models.Post.user)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.votes, querySpaceUid=&lt;gen:5&gt;, path=com.revature.models.Post.votes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:6&gt;, path=com.revature.models.Post.votes.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

- Static select for entity com.revature.models.Post [UPGRADE]: select post0_.id as id1_3_0_, post0_.content as content2_3_0_, post0_.group_id as group_id5_3_0_, post0_.imageUrl as imageUrl3_3_0_, post0_.title as title4_3_0_, post0_.user_id as user_id6_3_0_ from Post post0_ where post0_.id=? for update
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e4bb20]
- Visiting attribute path : comments
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@463b4ac8]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@765f05af]
- Visiting attribute path : content
- Visiting attribute path : group
- Adding QuerySpace : uid = &lt;gen:3&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62f68dff]
- Visiting attribute path : imageUrl
- Visiting attribute path : title
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:4&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f001896]
- Visiting attribute path : votes
- Adding QuerySpace : uid = &lt;gen:5&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13f17eb4]
- Adding QuerySpace : uid = &lt;gen:6&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d0d6318]
- Adding QuerySpace : uid = &lt;gen:6&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4bc28c33]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Post)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.comments, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Post.comments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Post.comments.&lt;elements&gt;)
          - EntityAttributeFetchImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:3&gt;, path=com.revature.models.Post.group)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:4&gt;, path=com.revature.models.Post.user)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.votes, querySpaceUid=&lt;gen:5&gt;, path=com.revature.models.Post.votes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:6&gt;, path=com.revature.models.Post.votes.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

- Static select for entity com.revature.models.Post [UPGRADE_NOWAIT]: select post0_.id as id1_3_0_, post0_.content as content2_3_0_, post0_.group_id as group_id5_3_0_, post0_.imageUrl as imageUrl3_3_0_, post0_.title as title4_3_0_, post0_.user_id as user_id6_3_0_ from Post post0_ where post0_.id=? for update nowait
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4409e975]
- Visiting attribute path : comments
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a7686a7]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@758a34ce]
- Visiting attribute path : content
- Visiting attribute path : group
- Adding QuerySpace : uid = &lt;gen:3&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ec3394b]
- Visiting attribute path : imageUrl
- Visiting attribute path : title
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:4&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bff34c6]
- Visiting attribute path : votes
- Adding QuerySpace : uid = &lt;gen:5&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1522d8a0]
- Adding QuerySpace : uid = &lt;gen:6&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@312ab28e]
- Adding QuerySpace : uid = &lt;gen:6&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5644dc81]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Post)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.comments, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Post.comments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Post.comments.&lt;elements&gt;)
          - EntityAttributeFetchImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:3&gt;, path=com.revature.models.Post.group)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:4&gt;, path=com.revature.models.Post.user)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.votes, querySpaceUid=&lt;gen:5&gt;, path=com.revature.models.Post.votes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:6&gt;, path=com.revature.models.Post.votes.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

- Static select for entity com.revature.models.Post [UPGRADE_SKIPLOCKED]: select post0_.id as id1_3_0_, post0_.content as content2_3_0_, post0_.group_id as group_id5_3_0_, post0_.imageUrl as imageUrl3_3_0_, post0_.title as title4_3_0_, post0_.user_id as user_id6_3_0_ from Post post0_ where post0_.id=? for update skip locked
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@246f8b8b]
- Visiting attribute path : comments
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4351c8c3]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3381b4fc]
- Visiting attribute path : content
- Visiting attribute path : group
- Adding QuerySpace : uid = &lt;gen:3&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bea52d4]
- Visiting attribute path : imageUrl
- Visiting attribute path : title
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:4&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11981797]
- Visiting attribute path : votes
- Adding QuerySpace : uid = &lt;gen:5&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c42d2b7]
- Adding QuerySpace : uid = &lt;gen:6&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@625abb97]
- Adding QuerySpace : uid = &lt;gen:6&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5b1f29fa]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Post)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.comments, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Post.comments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Post.comments.&lt;elements&gt;)
          - EntityAttributeFetchImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:3&gt;, path=com.revature.models.Post.group)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:4&gt;, path=com.revature.models.Post.user)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.votes, querySpaceUid=&lt;gen:5&gt;, path=com.revature.models.Post.votes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:6&gt;, path=com.revature.models.Post.votes.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

- Static select for entity com.revature.models.Post [FORCE]: select post0_.id as id1_3_0_, post0_.content as content2_3_0_, post0_.group_id as group_id5_3_0_, post0_.imageUrl as imageUrl3_3_0_, post0_.title as title4_3_0_, post0_.user_id as user_id6_3_0_ from Post post0_ where post0_.id=? for update nowait
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aeab9a1]
- Visiting attribute path : comments
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@774698ab]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55342f40]
- Visiting attribute path : content
- Visiting attribute path : group
- Adding QuerySpace : uid = &lt;gen:3&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a4ca3f6]
- Visiting attribute path : imageUrl
- Visiting attribute path : title
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:4&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72ea6193]
- Visiting attribute path : votes
- Adding QuerySpace : uid = &lt;gen:5&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31aa3ca5]
- Adding QuerySpace : uid = &lt;gen:6&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45905bff]
- Adding QuerySpace : uid = &lt;gen:6&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2a2c13a8]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Post)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.comments, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Post.comments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Post.comments.&lt;elements&gt;)
          - EntityAttributeFetchImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:3&gt;, path=com.revature.models.Post.group)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:4&gt;, path=com.revature.models.Post.user)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.votes, querySpaceUid=&lt;gen:5&gt;, path=com.revature.models.Post.votes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:6&gt;, path=com.revature.models.Post.votes.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

- Static select for entity com.revature.models.Post [PESSIMISTIC_READ]: select post0_.id as id1_3_0_, post0_.content as content2_3_0_, post0_.group_id as group_id5_3_0_, post0_.imageUrl as imageUrl3_3_0_, post0_.title as title4_3_0_, post0_.user_id as user_id6_3_0_ from Post post0_ where post0_.id=? for update
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b6b1987]
- Visiting attribute path : comments
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ccca26f]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66b7550d]
- Visiting attribute path : content
- Visiting attribute path : group
- Adding QuerySpace : uid = &lt;gen:3&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3543df7d]
- Visiting attribute path : imageUrl
- Visiting attribute path : title
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:4&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c541c15]
- Visiting attribute path : votes
- Adding QuerySpace : uid = &lt;gen:5&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3542162a]
- Adding QuerySpace : uid = &lt;gen:6&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@698122b2]
- Adding QuerySpace : uid = &lt;gen:6&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4212a0c8]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Post)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.comments, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Post.comments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Post.comments.&lt;elements&gt;)
          - EntityAttributeFetchImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:3&gt;, path=com.revature.models.Post.group)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:4&gt;, path=com.revature.models.Post.user)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.votes, querySpaceUid=&lt;gen:5&gt;, path=com.revature.models.Post.votes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:6&gt;, path=com.revature.models.Post.votes.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

- Static select for entity com.revature.models.Post [PESSIMISTIC_WRITE]: select post0_.id as id1_3_0_, post0_.content as content2_3_0_, post0_.group_id as group_id5_3_0_, post0_.imageUrl as imageUrl3_3_0_, post0_.title as title4_3_0_, post0_.user_id as user_id6_3_0_ from Post post0_ where post0_.id=? for update
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e7aa82b]
- Visiting attribute path : comments
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bd82fed]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c1bd0be]
- Visiting attribute path : content
- Visiting attribute path : group
- Adding QuerySpace : uid = &lt;gen:3&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@476b0ae6]
- Visiting attribute path : imageUrl
- Visiting attribute path : title
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:4&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c6804cd]
- Visiting attribute path : votes
- Adding QuerySpace : uid = &lt;gen:5&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@655f7ea]
- Adding QuerySpace : uid = &lt;gen:6&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@549949be]
- Adding QuerySpace : uid = &lt;gen:6&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4b3a45f1]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Post)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.comments, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Post.comments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Post.comments.&lt;elements&gt;)
          - EntityAttributeFetchImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:3&gt;, path=com.revature.models.Post.group)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:4&gt;, path=com.revature.models.Post.user)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.votes, querySpaceUid=&lt;gen:5&gt;, path=com.revature.models.Post.votes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:6&gt;, path=com.revature.models.Post.votes.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

- Static select for entity com.revature.models.Post [PESSIMISTIC_FORCE_INCREMENT]: select post0_.id as id1_3_0_, post0_.content as content2_3_0_, post0_.group_id as group_id5_3_0_, post0_.imageUrl as imageUrl3_3_0_, post0_.title as title4_3_0_, post0_.user_id as user_id6_3_0_ from Post post0_ where post0_.id=? for update nowait
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17a87e37]
- Visiting attribute path : comments
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20a14b55]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ad977d]
- Visiting attribute path : content
- Visiting attribute path : group
- Adding QuerySpace : uid = &lt;gen:3&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6da00fb9]
- Visiting attribute path : imageUrl
- Visiting attribute path : title
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:4&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a202ccb]
- Visiting attribute path : votes
- Adding QuerySpace : uid = &lt;gen:5&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20f12539]
- Adding QuerySpace : uid = &lt;gen:6&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75b25825]
- Adding QuerySpace : uid = &lt;gen:6&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@18025ced]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Post)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.comments, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Post.comments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Post.comments.&lt;elements&gt;)
          - EntityAttributeFetchImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:3&gt;, path=com.revature.models.Post.group)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:4&gt;, path=com.revature.models.Post.user)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.votes, querySpaceUid=&lt;gen:5&gt;, path=com.revature.models.Post.votes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:6&gt;, path=com.revature.models.Post.votes.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

- Static select for entity com.revature.models.Post [OPTIMISTIC]: select post0_.id as id1_3_0_, post0_.content as content2_3_0_, post0_.group_id as group_id5_3_0_, post0_.imageUrl as imageUrl3_3_0_, post0_.title as title4_3_0_, post0_.user_id as user_id6_3_0_ from Post post0_ where post0_.id=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13cf7d52]
- Visiting attribute path : comments
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d2a4eed]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57459491]
- Visiting attribute path : content
- Visiting attribute path : group
- Adding QuerySpace : uid = &lt;gen:3&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f0846c6]
- Visiting attribute path : imageUrl
- Visiting attribute path : title
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:4&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77a98a6a]
- Visiting attribute path : votes
- Adding QuerySpace : uid = &lt;gen:5&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78fbff54]
- Adding QuerySpace : uid = &lt;gen:6&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e10dc6]
- Adding QuerySpace : uid = &lt;gen:6&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7e22550a]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Post)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.comments, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Post.comments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Post.comments.&lt;elements&gt;)
          - EntityAttributeFetchImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:3&gt;, path=com.revature.models.Post.group)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:4&gt;, path=com.revature.models.Post.user)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Post.votes, querySpaceUid=&lt;gen:5&gt;, path=com.revature.models.Post.votes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:6&gt;, path=com.revature.models.Post.votes.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

- Static select for entity com.revature.models.Post [OPTIMISTIC_FORCE_INCREMENT]: select post0_.id as id1_3_0_, post0_.content as content2_3_0_, post0_.group_id as group_id5_3_0_, post0_.imageUrl as imageUrl3_3_0_, post0_.title as title4_3_0_, post0_.user_id as user_id6_3_0_ from Post post0_ where post0_.id=?
- Static select for action ACTION_MERGE on entity com.revature.models.Post: select post0_.id as id1_3_0_, post0_.content as content2_3_0_, post0_.group_id as group_id5_3_0_, post0_.imageUrl as imageUrl3_3_0_, post0_.title as title4_3_0_, post0_.user_id as user_id6_3_0_ from Post post0_ where post0_.id=?
- Static select for action ACTION_REFRESH on entity com.revature.models.Post: select post0_.id as id1_3_0_, post0_.content as content2_3_0_, post0_.group_id as group_id5_3_0_, post0_.imageUrl as imageUrl3_3_0_, post0_.title as title4_3_0_, post0_.user_id as user_id6_3_0_ from Post post0_ where post0_.id=?
- Static SQL for entity: com.revature.models.User
-  Version select: select id from USERS where id =?
-  Snapshot select: select user_.id, user_.nickname as nickname2_4_, user_.role as role3_4_ from USERS user_ where user_.id=?
-  Insert 0: insert into USERS (nickname, role, id) values (?, ?, ?)
-  Update 0: update USERS set nickname=?, role=? where id=?
-  Delete 0: delete from USERS where id=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d18aa28]
- Visiting attribute path : groups
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7756c3cd]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2313052e]
- Visiting attribute path : groups.name
- Visiting attribute path : groups.users
- Property path deemed to be circular : groups.users
- Visiting attribute path : nickname
- Visiting attribute path : role
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.User)
          - CollectionAttributeFetchImpl(collection=com.revature.models.User.groups, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Group, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.User.groups.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(groups)) : &lt;gen:0&gt; -&gt; &lt;gen:1&gt;
             - CollectionQuerySpaceImpl(uid=&lt;gen:1&gt;, collection=com.revature.models.User.groups)
                - SQL table alias mapping - groups1_
                - alias suffix - 1_
                - suffixed key columns - {id2_4_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : &lt;gen:1&gt; -&gt; &lt;gen:2&gt;
                   - EntityQuerySpaceImpl(uid=&lt;gen:2&gt;, entity=com.revature.models.Group)
                      - SQL table alias mapping - group2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

- Static select for entity com.revature.models.User [NONE]: select user0_.id as id1_4_0_, user0_.nickname as nickname2_4_0_, user0_.role as role3_4_0_, groups1_.id as id2_4_1_, group2_.id as name1_2_1_, group2_.id as id1_1_2_, group2_.GROUP_NAME as GROUP_NAME2_1_2_ from USERS user0_ left outer join GROUPS_USERS groups1_ on user0_.id=groups1_.id left outer join GROUPS group2_ on groups1_.name=group2_.id where user0_.id=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57fd91c9]
- Visiting attribute path : groups
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52045dbe]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@674658f7]
- Visiting attribute path : groups.name
- Visiting attribute path : groups.users
- Property path deemed to be circular : groups.users
- Visiting attribute path : nickname
- Visiting attribute path : role
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.User)
          - CollectionAttributeFetchImpl(collection=com.revature.models.User.groups, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Group, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.User.groups.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(groups)) : &lt;gen:0&gt; -&gt; &lt;gen:1&gt;
             - CollectionQuerySpaceImpl(uid=&lt;gen:1&gt;, collection=com.revature.models.User.groups)
                - SQL table alias mapping - groups1_
                - alias suffix - 1_
                - suffixed key columns - {id2_4_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : &lt;gen:1&gt; -&gt; &lt;gen:2&gt;
                   - EntityQuerySpaceImpl(uid=&lt;gen:2&gt;, entity=com.revature.models.Group)
                      - SQL table alias mapping - group2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

- Static select for entity com.revature.models.User [READ]: select user0_.id as id1_4_0_, user0_.nickname as nickname2_4_0_, user0_.role as role3_4_0_, groups1_.id as id2_4_1_, group2_.id as name1_2_1_, group2_.id as id1_1_2_, group2_.GROUP_NAME as GROUP_NAME2_1_2_ from USERS user0_ left outer join GROUPS_USERS groups1_ on user0_.id=groups1_.id left outer join GROUPS group2_ on groups1_.name=group2_.id where user0_.id=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26425897]
- Visiting attribute path : groups
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58c34bb3]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56a4479a]
- Visiting attribute path : nickname
- Visiting attribute path : role
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.User)
          - CollectionAttributeFetchImpl(collection=com.revature.models.User.groups, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Group, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.User.groups.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

- Static select for entity com.revature.models.User [UPGRADE]: select user0_.id as id1_4_0_, user0_.nickname as nickname2_4_0_, user0_.role as role3_4_0_ from USERS user0_ where user0_.id=? for update
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62163b39]
- Visiting attribute path : groups
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62f4ff3b]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1698fc68]
- Visiting attribute path : nickname
- Visiting attribute path : role
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.User)
          - CollectionAttributeFetchImpl(collection=com.revature.models.User.groups, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Group, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.User.groups.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

- Static select for entity com.revature.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_4_0_, user0_.nickname as nickname2_4_0_, user0_.role as role3_4_0_ from USERS user0_ where user0_.id=? for update nowait
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4504d271]
- Visiting attribute path : groups
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65b3a85a]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34997338]
- Visiting attribute path : nickname
- Visiting attribute path : role
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.User)
          - CollectionAttributeFetchImpl(collection=com.revature.models.User.groups, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Group, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.User.groups.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

- Static select for entity com.revature.models.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_4_0_, user0_.nickname as nickname2_4_0_, user0_.role as role3_4_0_ from USERS user0_ where user0_.id=? for update skip locked
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b5825fa]
- Visiting attribute path : groups
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2cae1042]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@163d04ff]
- Visiting attribute path : nickname
- Visiting attribute path : role
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.User)
          - CollectionAttributeFetchImpl(collection=com.revature.models.User.groups, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Group, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.User.groups.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

- Static select for entity com.revature.models.User [FORCE]: select user0_.id as id1_4_0_, user0_.nickname as nickname2_4_0_, user0_.role as role3_4_0_ from USERS user0_ where user0_.id=? for update nowait
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c209437]
- Visiting attribute path : groups
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e928e2f]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f667fe]
- Visiting attribute path : nickname
- Visiting attribute path : role
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.User)
          - CollectionAttributeFetchImpl(collection=com.revature.models.User.groups, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Group, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.User.groups.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

- Static select for entity com.revature.models.User [PESSIMISTIC_READ]: select user0_.id as id1_4_0_, user0_.nickname as nickname2_4_0_, user0_.role as role3_4_0_ from USERS user0_ where user0_.id=? for update
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@788fcafb]
- Visiting attribute path : groups
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25e2a451]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1698ee84]
- Visiting attribute path : nickname
- Visiting attribute path : role
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.User)
          - CollectionAttributeFetchImpl(collection=com.revature.models.User.groups, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Group, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.User.groups.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

- Static select for entity com.revature.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_4_0_, user0_.nickname as nickname2_4_0_, user0_.role as role3_4_0_ from USERS user0_ where user0_.id=? for update
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10c626be]
- Visiting attribute path : groups
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@328cf0e1]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63b1d4fa]
- Visiting attribute path : nickname
- Visiting attribute path : role
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.User)
          - CollectionAttributeFetchImpl(collection=com.revature.models.User.groups, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Group, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.User.groups.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

- Static select for entity com.revature.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_4_0_, user0_.nickname as nickname2_4_0_, user0_.role as role3_4_0_ from USERS user0_ where user0_.id=? for update nowait
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42e3ede4]
- Visiting attribute path : groups
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75459c75]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@183e8023]
- Visiting attribute path : nickname
- Visiting attribute path : role
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.User)
          - CollectionAttributeFetchImpl(collection=com.revature.models.User.groups, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Group, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.User.groups.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

- Static select for entity com.revature.models.User [OPTIMISTIC]: select user0_.id as id1_4_0_, user0_.nickname as nickname2_4_0_, user0_.role as role3_4_0_ from USERS user0_ where user0_.id=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45efc20d]
- Visiting attribute path : groups
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67ab1c47]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b78a709]
- Visiting attribute path : nickname
- Visiting attribute path : role
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.User)
          - CollectionAttributeFetchImpl(collection=com.revature.models.User.groups, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.User.groups)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Group, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.User.groups.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

- Static select for entity com.revature.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_4_0_, user0_.nickname as nickname2_4_0_, user0_.role as role3_4_0_ from USERS user0_ where user0_.id=?
- Static select for action ACTION_MERGE on entity com.revature.models.User: select user0_.id as id1_4_0_, user0_.nickname as nickname2_4_0_, user0_.role as role3_4_0_ from USERS user0_ where user0_.id=?
- Static select for action ACTION_REFRESH on entity com.revature.models.User: select user0_.id as id1_4_0_, user0_.nickname as nickname2_4_0_, user0_.role as role3_4_0_ from USERS user0_ where user0_.id=?
- Static SQL for entity: com.revature.models.Vote
-  Version select: select postId, userId from Vote where postId =? and userId =?
-  Snapshot select: select vote_.postId, vote_.userId from Vote vote_ where vote_.postId=? and vote_.userId=?
-  Insert 0: insert into Vote (postId, userId) values (?, ?)
-  Update 0: null
-  Delete 0: delete from Vote where postId=? and userId=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30bcf3c1]
- Adding QuerySpace : uid = &lt;gen:0&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2a3c96e3]
- Visiting attribute path : postId
- Visiting attribute path : userId
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Vote)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Vote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Vote)
          - SQL table alias mapping - vote0_
          - alias suffix - 0_
          - suffixed key columns - {postId1_5_0_, userId2_5_0_}
          - JOIN (JoinDefinedByMetadata(id)) : &lt;gen:0&gt; -&gt; &lt;gen:0&gt;-id
             - CompositeQuerySpaceImpl(uid=&lt;gen:0&gt;-id)
                - SQL table alias mapping - vote0_

- Static select for entity com.revature.models.Vote [NONE]: select vote0_.postId as postId1_5_0_, vote0_.userId as userId2_5_0_ from Vote vote0_ where vote0_.postId=? and vote0_.userId=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a776e]
- Adding QuerySpace : uid = &lt;gen:0&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@792bbc74]
- Visiting attribute path : postId
- Visiting attribute path : userId
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Vote)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Vote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Vote)
          - SQL table alias mapping - vote0_
          - alias suffix - 0_
          - suffixed key columns - {postId1_5_0_, userId2_5_0_}
          - JOIN (JoinDefinedByMetadata(id)) : &lt;gen:0&gt; -&gt; &lt;gen:0&gt;-id
             - CompositeQuerySpaceImpl(uid=&lt;gen:0&gt;-id)
                - SQL table alias mapping - vote0_

- Static select for entity com.revature.models.Vote [READ]: select vote0_.postId as postId1_5_0_, vote0_.userId as userId2_5_0_ from Vote vote0_ where vote0_.postId=? and vote0_.userId=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c4d27c8]
- Adding QuerySpace : uid = &lt;gen:0&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6821ea29]
- Visiting attribute path : postId
- Visiting attribute path : userId
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Vote)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Vote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Vote)
          - SQL table alias mapping - vote0_
          - alias suffix - 0_
          - suffixed key columns - {postId1_5_0_, userId2_5_0_}
          - JOIN (JoinDefinedByMetadata(id)) : &lt;gen:0&gt; -&gt; &lt;gen:0&gt;-id
             - CompositeQuerySpaceImpl(uid=&lt;gen:0&gt;-id)
                - SQL table alias mapping - vote0_

- Static select for entity com.revature.models.Vote [UPGRADE]: select vote0_.postId as postId1_5_0_, vote0_.userId as userId2_5_0_ from Vote vote0_ where vote0_.postId=? and vote0_.userId=? for update
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@758c83d8]
- Adding QuerySpace : uid = &lt;gen:0&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@129b4fe2]
- Visiting attribute path : postId
- Visiting attribute path : userId
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Vote)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Vote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Vote)
          - SQL table alias mapping - vote0_
          - alias suffix - 0_
          - suffixed key columns - {postId1_5_0_, userId2_5_0_}
          - JOIN (JoinDefinedByMetadata(id)) : &lt;gen:0&gt; -&gt; &lt;gen:0&gt;-id
             - CompositeQuerySpaceImpl(uid=&lt;gen:0&gt;-id)
                - SQL table alias mapping - vote0_

- Static select for entity com.revature.models.Vote [UPGRADE_NOWAIT]: select vote0_.postId as postId1_5_0_, vote0_.userId as userId2_5_0_ from Vote vote0_ where vote0_.postId=? and vote0_.userId=? for update nowait
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10993713]
- Adding QuerySpace : uid = &lt;gen:0&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@58359ebd]
- Visiting attribute path : postId
- Visiting attribute path : userId
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Vote)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Vote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Vote)
          - SQL table alias mapping - vote0_
          - alias suffix - 0_
          - suffixed key columns - {postId1_5_0_, userId2_5_0_}
          - JOIN (JoinDefinedByMetadata(id)) : &lt;gen:0&gt; -&gt; &lt;gen:0&gt;-id
             - CompositeQuerySpaceImpl(uid=&lt;gen:0&gt;-id)
                - SQL table alias mapping - vote0_

- Static select for entity com.revature.models.Vote [UPGRADE_SKIPLOCKED]: select vote0_.postId as postId1_5_0_, vote0_.userId as userId2_5_0_ from Vote vote0_ where vote0_.postId=? and vote0_.userId=? for update skip locked
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bb7bd00]
- Adding QuerySpace : uid = &lt;gen:0&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5f031ebd]
- Visiting attribute path : postId
- Visiting attribute path : userId
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Vote)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Vote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Vote)
          - SQL table alias mapping - vote0_
          - alias suffix - 0_
          - suffixed key columns - {postId1_5_0_, userId2_5_0_}
          - JOIN (JoinDefinedByMetadata(id)) : &lt;gen:0&gt; -&gt; &lt;gen:0&gt;-id
             - CompositeQuerySpaceImpl(uid=&lt;gen:0&gt;-id)
                - SQL table alias mapping - vote0_

- Static select for entity com.revature.models.Vote [FORCE]: select vote0_.postId as postId1_5_0_, vote0_.userId as userId2_5_0_ from Vote vote0_ where vote0_.postId=? and vote0_.userId=? for update nowait
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53812a9b]
- Adding QuerySpace : uid = &lt;gen:0&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@14b030a0]
- Visiting attribute path : postId
- Visiting attribute path : userId
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Vote)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Vote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Vote)
          - SQL table alias mapping - vote0_
          - alias suffix - 0_
          - suffixed key columns - {postId1_5_0_, userId2_5_0_}
          - JOIN (JoinDefinedByMetadata(id)) : &lt;gen:0&gt; -&gt; &lt;gen:0&gt;-id
             - CompositeQuerySpaceImpl(uid=&lt;gen:0&gt;-id)
                - SQL table alias mapping - vote0_

- Static select for entity com.revature.models.Vote [PESSIMISTIC_READ]: select vote0_.postId as postId1_5_0_, vote0_.userId as userId2_5_0_ from Vote vote0_ where vote0_.postId=? and vote0_.userId=? for update
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18230356]
- Adding QuerySpace : uid = &lt;gen:0&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@d8305c2]
- Visiting attribute path : postId
- Visiting attribute path : userId
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Vote)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Vote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Vote)
          - SQL table alias mapping - vote0_
          - alias suffix - 0_
          - suffixed key columns - {postId1_5_0_, userId2_5_0_}
          - JOIN (JoinDefinedByMetadata(id)) : &lt;gen:0&gt; -&gt; &lt;gen:0&gt;-id
             - CompositeQuerySpaceImpl(uid=&lt;gen:0&gt;-id)
                - SQL table alias mapping - vote0_

- Static select for entity com.revature.models.Vote [PESSIMISTIC_WRITE]: select vote0_.postId as postId1_5_0_, vote0_.userId as userId2_5_0_ from Vote vote0_ where vote0_.postId=? and vote0_.userId=? for update
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75e91545]
- Adding QuerySpace : uid = &lt;gen:0&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@60d1a32f]
- Visiting attribute path : postId
- Visiting attribute path : userId
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Vote)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Vote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Vote)
          - SQL table alias mapping - vote0_
          - alias suffix - 0_
          - suffixed key columns - {postId1_5_0_, userId2_5_0_}
          - JOIN (JoinDefinedByMetadata(id)) : &lt;gen:0&gt; -&gt; &lt;gen:0&gt;-id
             - CompositeQuerySpaceImpl(uid=&lt;gen:0&gt;-id)
                - SQL table alias mapping - vote0_

- Static select for entity com.revature.models.Vote [PESSIMISTIC_FORCE_INCREMENT]: select vote0_.postId as postId1_5_0_, vote0_.userId as userId2_5_0_ from Vote vote0_ where vote0_.postId=? and vote0_.userId=? for update nowait
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fcb4808]
- Adding QuerySpace : uid = &lt;gen:0&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@726e5805]
- Visiting attribute path : postId
- Visiting attribute path : userId
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Vote)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Vote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Vote)
          - SQL table alias mapping - vote0_
          - alias suffix - 0_
          - suffixed key columns - {postId1_5_0_, userId2_5_0_}
          - JOIN (JoinDefinedByMetadata(id)) : &lt;gen:0&gt; -&gt; &lt;gen:0&gt;-id
             - CompositeQuerySpaceImpl(uid=&lt;gen:0&gt;-id)
                - SQL table alias mapping - vote0_

- Static select for entity com.revature.models.Vote [OPTIMISTIC]: select vote0_.postId as postId1_5_0_, vote0_.userId as userId2_5_0_ from Vote vote0_ where vote0_.postId=? and vote0_.userId=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ea9b7c6]
- Adding QuerySpace : uid = &lt;gen:0&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@e077866]
- Visiting attribute path : postId
- Visiting attribute path : userId
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Vote)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Vote)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Vote)
          - SQL table alias mapping - vote0_
          - alias suffix - 0_
          - suffixed key columns - {postId1_5_0_, userId2_5_0_}
          - JOIN (JoinDefinedByMetadata(id)) : &lt;gen:0&gt; -&gt; &lt;gen:0&gt;-id
             - CompositeQuerySpaceImpl(uid=&lt;gen:0&gt;-id)
                - SQL table alias mapping - vote0_

- Static select for entity com.revature.models.Vote [OPTIMISTIC_FORCE_INCREMENT]: select vote0_.postId as postId1_5_0_, vote0_.userId as userId2_5_0_ from Vote vote0_ where vote0_.postId=? and vote0_.userId=?
- Static select for action ACTION_MERGE on entity com.revature.models.Vote: select vote0_.postId as postId1_5_0_, vote0_.userId as userId2_5_0_ from Vote vote0_ where vote0_.postId=? and vote0_.userId=?
- Static select for action ACTION_REFRESH on entity com.revature.models.Vote: select vote0_.postId as postId1_5_0_, vote0_.userId as userId2_5_0_ from Vote vote0_ where vote0_.postId=? and vote0_.userId=?
- Static SQL for entity: com.revature.models.Group
-  Version select: select id from GROUPS where id =?
-  Snapshot select: select group_.id, group_.GROUP_NAME as GROUP_NAME2_1_ from GROUPS group_ where group_.id=?
-  Insert 0: insert into GROUPS (GROUP_NAME, id) values (?, ?)
-  Update 0: update GROUPS set GROUP_NAME=? where id=?
-  Delete 0: delete from GROUPS where id=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fffff43]
- Visiting attribute path : name
- Visiting attribute path : users
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c7fd41f]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b77a04f]
- Visiting attribute path : users.groups
- Property path deemed to be circular : users.groups
- Visiting attribute path : users.nickname
- Visiting attribute path : users.role
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Group)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Group)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Group.users, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Group.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Group.users.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(users)) : &lt;gen:0&gt; -&gt; &lt;gen:1&gt;
             - CollectionQuerySpaceImpl(uid=&lt;gen:1&gt;, collection=com.revature.models.Group.users)
                - SQL table alias mapping - users1_
                - alias suffix - 1_
                - suffixed key columns - {name1_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : &lt;gen:1&gt; -&gt; &lt;gen:2&gt;
                   - EntityQuerySpaceImpl(uid=&lt;gen:2&gt;, entity=com.revature.models.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

- Static select for entity com.revature.models.Group [NONE]: select group0_.id as id1_1_0_, group0_.GROUP_NAME as GROUP_NAME2_1_0_, users1_.name as name1_1_1_, user2_.id as id2_2_1_, user2_.id as id1_4_2_, user2_.nickname as nickname2_4_2_, user2_.role as role3_4_2_ from GROUPS group0_ left outer join GROUPS_USERS users1_ on group0_.id=users1_.name left outer join USERS user2_ on users1_.id=user2_.id where group0_.id=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60dce7ea]
- Visiting attribute path : name
- Visiting attribute path : users
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fd8294b]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5974109]
- Visiting attribute path : users.groups
- Property path deemed to be circular : users.groups
- Visiting attribute path : users.nickname
- Visiting attribute path : users.role
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Group)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Group)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Group.users, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Group.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Group.users.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(users)) : &lt;gen:0&gt; -&gt; &lt;gen:1&gt;
             - CollectionQuerySpaceImpl(uid=&lt;gen:1&gt;, collection=com.revature.models.Group.users)
                - SQL table alias mapping - users1_
                - alias suffix - 1_
                - suffixed key columns - {name1_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : &lt;gen:1&gt; -&gt; &lt;gen:2&gt;
                   - EntityQuerySpaceImpl(uid=&lt;gen:2&gt;, entity=com.revature.models.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

- Static select for entity com.revature.models.Group [READ]: select group0_.id as id1_1_0_, group0_.GROUP_NAME as GROUP_NAME2_1_0_, users1_.name as name1_1_1_, user2_.id as id2_2_1_, user2_.id as id1_4_2_, user2_.nickname as nickname2_4_2_, user2_.role as role3_4_2_ from GROUPS group0_ left outer join GROUPS_USERS users1_ on group0_.id=users1_.name left outer join USERS user2_ on users1_.id=user2_.id where group0_.id=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@502f1f4c]
- Visiting attribute path : name
- Visiting attribute path : users
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75c9e76b]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7446d8d5]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Group)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Group)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Group.users, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Group.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Group.users.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

- Static select for entity com.revature.models.Group [UPGRADE]: select group0_.id as id1_1_0_, group0_.GROUP_NAME as GROUP_NAME2_1_0_ from GROUPS group0_ where group0_.id=? for update
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c3b6c6e]
- Visiting attribute path : name
- Visiting attribute path : users
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75f5fd58]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37b70343]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Group)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Group)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Group.users, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Group.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Group.users.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

- Static select for entity com.revature.models.Group [UPGRADE_NOWAIT]: select group0_.id as id1_1_0_, group0_.GROUP_NAME as GROUP_NAME2_1_0_ from GROUPS group0_ where group0_.id=? for update nowait
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@306851c7]
- Visiting attribute path : name
- Visiting attribute path : users
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4879f0f2]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47db5fa5]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Group)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Group)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Group.users, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Group.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Group.users.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

- Static select for entity com.revature.models.Group [UPGRADE_SKIPLOCKED]: select group0_.id as id1_1_0_, group0_.GROUP_NAME as GROUP_NAME2_1_0_ from GROUPS group0_ where group0_.id=? for update skip locked
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@354fc8f0]
- Visiting attribute path : name
- Visiting attribute path : users
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4678a2eb]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b43fbf6]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Group)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Group)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Group.users, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Group.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Group.users.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

- Static select for entity com.revature.models.Group [FORCE]: select group0_.id as id1_1_0_, group0_.GROUP_NAME as GROUP_NAME2_1_0_ from GROUPS group0_ where group0_.id=? for update nowait
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1080b026]
- Visiting attribute path : name
- Visiting attribute path : users
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b07730f]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fdfafd2]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Group)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Group)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Group.users, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Group.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Group.users.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

- Static select for entity com.revature.models.Group [PESSIMISTIC_READ]: select group0_.id as id1_1_0_, group0_.GROUP_NAME as GROUP_NAME2_1_0_ from GROUPS group0_ where group0_.id=? for update
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a4b2d8f]
- Visiting attribute path : name
- Visiting attribute path : users
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d304f9d]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f73dcd6]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Group)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Group)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Group.users, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Group.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Group.users.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

- Static select for entity com.revature.models.Group [PESSIMISTIC_WRITE]: select group0_.id as id1_1_0_, group0_.GROUP_NAME as GROUP_NAME2_1_0_ from GROUPS group0_ where group0_.id=? for update
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c87bfe2]
- Visiting attribute path : name
- Visiting attribute path : users
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40499e4f]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51cd7ffc]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Group)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Group)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Group.users, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Group.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Group.users.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

- Static select for entity com.revature.models.Group [PESSIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_1_0_, group0_.GROUP_NAME as GROUP_NAME2_1_0_ from GROUPS group0_ where group0_.id=? for update nowait
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30d4b288]
- Visiting attribute path : name
- Visiting attribute path : users
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40f1be1b]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a791b66]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Group)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Group)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Group.users, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Group.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Group.users.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

- Static select for entity com.revature.models.Group [OPTIMISTIC]: select group0_.id as id1_1_0_, group0_.GROUP_NAME as GROUP_NAME2_1_0_ from GROUPS group0_ where group0_.id=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f2cb653]
- Visiting attribute path : name
- Visiting attribute path : users
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@590c73d3]
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b9ce1bf]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Group)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Group)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Group.users, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Group.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Group.users.&lt;elements&gt;)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

- Static select for entity com.revature.models.Group [OPTIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_1_0_, group0_.GROUP_NAME as GROUP_NAME2_1_0_ from GROUPS group0_ where group0_.id=?
- Static select for action ACTION_MERGE on entity com.revature.models.Group: select group0_.id as id1_1_1_, group0_.GROUP_NAME as GROUP_NAME2_1_1_, users1_.name as name1_1_3_, user2_.id as id2_2_3_, user2_.id as id1_4_0_, user2_.nickname as nickname2_4_0_, user2_.role as role3_4_0_ from GROUPS group0_ left outer join GROUPS_USERS users1_ on group0_.id=users1_.name left outer join USERS user2_ on users1_.id=user2_.id where group0_.id=?
- Static select for action ACTION_REFRESH on entity com.revature.models.Group: select group0_.id as id1_1_1_, group0_.GROUP_NAME as GROUP_NAME2_1_1_, users1_.name as name1_1_3_, user2_.id as id2_2_3_, user2_.id as id1_4_0_, user2_.nickname as nickname2_4_0_, user2_.role as role3_4_0_ from GROUPS group0_ left outer join GROUPS_USERS users1_ on group0_.id=users1_.name left outer join USERS user2_ on users1_.id=user2_.id where group0_.id=?
- Static SQL for entity: com.revature.models.Comment
-  Version select: select id from COMMENTS where id =?
-  Snapshot select: select comment_.id, comment_.content as content2_0_, comment_.post_id as post_id3_0_, comment_.user_id as user_id4_0_ from COMMENTS comment_ where comment_.id=?
-  Insert 0: insert into COMMENTS (content, post_id, user_id, id) values (?, ?, ?, ?)
-  Update 0: update COMMENTS set content=?, post_id=?, user_id=? where id=?
-  Delete 0: delete from COMMENTS where id=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fc5e095]
- Visiting attribute path : content
- Visiting attribute path : post
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@609640d5]
- Visiting attribute path : post.comments
- Property path deemed to be circular : post.comments
- Visiting attribute path : post.content
- Visiting attribute path : post.group
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19fb8826]
- Visiting attribute path : post.group.name
- Visiting attribute path : post.group.users
- Adding QuerySpace : uid = &lt;gen:3&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4bef0fe3]
- Adding QuerySpace : uid = &lt;gen:4&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62ea3440]
- Visiting attribute path : post.group.users.groups
- Property path deemed to be circular : post.group.users.groups
- Visiting attribute path : post.group.users.nickname
- Visiting attribute path : post.group.users.role
- Visiting attribute path : post.imageUrl
- Visiting attribute path : post.title
- Visiting attribute path : post.user
- Adding QuerySpace : uid = &lt;gen:5&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66ce957f]
- Visiting attribute path : post.user.groups
- Property path deemed to be circular : post.user.groups
- Visiting attribute path : post.user.nickname
- Visiting attribute path : post.user.role
- Visiting attribute path : post.votes
- Adding QuerySpace : uid = &lt;gen:6&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bfa8cc5]
- Adding QuerySpace : uid = &lt;gen:7&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@666b83a4]
- Adding QuerySpace : uid = &lt;gen:7&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@749c877b]
- Visiting attribute path : post.votes.postId
- Visiting attribute path : post.votes.userId
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:8&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b95e48b]
- Visiting attribute path : user.groups
- Property path deemed to be circular : user.groups
- Visiting attribute path : user.nickname
- Visiting attribute path : user.role
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Comment)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Comment)
          - EntityAttributeFetchImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Comment.post)
             - EntityAttributeFetchImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Comment.post.group)
                - CollectionAttributeFetchImpl(collection=com.revature.models.Group.users, querySpaceUid=&lt;gen:3&gt;, path=com.revature.models.Comment.post.group.users)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.User, querySpaceUid=&lt;gen:4&gt;, path=com.revature.models.Comment.post.group.users.&lt;elements&gt;)
             - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:5&gt;, path=com.revature.models.Comment.post.user)
             - CollectionAttributeFetchImpl(collection=com.revature.models.Post.votes, querySpaceUid=&lt;gen:6&gt;, path=com.revature.models.Comment.post.votes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:7&gt;, path=com.revature.models.Comment.post.votes.&lt;elements&gt;)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:8&gt;, path=com.revature.models.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(post)) : &lt;gen:0&gt; -&gt; &lt;gen:1&gt;
             - EntityQuerySpaceImpl(uid=&lt;gen:1&gt;, entity=com.revature.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(group)) : &lt;gen:1&gt; -&gt; &lt;gen:2&gt;
                   - EntityQuerySpaceImpl(uid=&lt;gen:2&gt;, entity=com.revature.models.Group)
                      - SQL table alias mapping - group2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(users)) : &lt;gen:2&gt; -&gt; &lt;gen:3&gt;
                         - CollectionQuerySpaceImpl(uid=&lt;gen:3&gt;, collection=com.revature.models.Group.users)
                            - SQL table alias mapping - users3_
                            - alias suffix - 3_
                            - suffixed key columns - {name1_1_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_4_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : &lt;gen:3&gt; -&gt; &lt;gen:4&gt;
                               - EntityQuerySpaceImpl(uid=&lt;gen:4&gt;, entity=com.revature.models.User)
                                  - SQL table alias mapping - user4_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(user)) : &lt;gen:1&gt; -&gt; &lt;gen:5&gt;
                   - EntityQuerySpaceImpl(uid=&lt;gen:5&gt;, entity=com.revature.models.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_4_5_}
                - JOIN (JoinDefinedByMetadata(votes)) : &lt;gen:1&gt; -&gt; &lt;gen:6&gt;
                   - CollectionQuerySpaceImpl(uid=&lt;gen:6&gt;, collection=com.revature.models.Post.votes)
                      - SQL table alias mapping - votes6_
                      - alias suffix - 6_
                      - suffixed key columns - {postId1_3_6_}
                      - entity-element alias suffix - 7_
                      - 7_entity-element suffixed key columns - postId1_5_7_, userId2_5_7_
                      - JOIN (JoinDefinedByMetadata(elements)) : &lt;gen:6&gt; -&gt; &lt;gen:7&gt;
                         - EntityQuerySpaceImpl(uid=&lt;gen:7&gt;, entity=com.revature.models.Vote)
                            - SQL table alias mapping - votes6_
                            - alias suffix - 7_
                            - suffixed key columns - {postId1_5_7_, userId2_5_7_}
                            - JOIN (JoinDefinedByMetadata(id)) : &lt;gen:7&gt; -&gt; &lt;gen:7&gt;-id
                               - CompositeQuerySpaceImpl(uid=&lt;gen:7&gt;-id)
                                  - SQL table alias mapping - votes6_
          - JOIN (JoinDefinedByMetadata(user)) : &lt;gen:0&gt; -&gt; &lt;gen:8&gt;
             - EntityQuerySpaceImpl(uid=&lt;gen:8&gt;, entity=com.revature.models.User)
                - SQL table alias mapping - user7_
                - alias suffix - 8_
                - suffixed key columns - {id1_4_8_}

- Static select for entity com.revature.models.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.content as content2_0_0_, comment0_.post_id as post_id3_0_0_, comment0_.user_id as user_id4_0_0_, post1_.id as id1_3_1_, post1_.content as content2_3_1_, post1_.group_id as group_id5_3_1_, post1_.imageUrl as imageUrl3_3_1_, post1_.title as title4_3_1_, post1_.user_id as user_id6_3_1_, group2_.id as id1_1_2_, group2_.GROUP_NAME as GROUP_NAME2_1_2_, users3_.name as name1_1_3_, user4_.id as id2_2_3_, user4_.id as id1_4_4_, user4_.nickname as nickname2_4_4_, user4_.role as role3_4_4_, user5_.id as id1_4_5_, user5_.nickname as nickname2_4_5_, user5_.role as role3_4_5_, votes6_.postId as postId1_3_6_, votes6_.postId as postId1_5_6_, votes6_.userId as userId2_5_6_, votes6_.postId as postId1_5_7_, votes6_.userId as userId2_5_7_, user7_.id as id1_4_8_, user7_.nickname as nickname2_4_8_, user7_.role as role3_4_8_ from COMMENTS comment0_ left outer join Post post1_ on comment0_.post_id=post1_.id left outer join GROUPS group2_ on post1_.group_id=group2_.id left outer join GROUPS_USERS users3_ on group2_.id=users3_.name left outer join USERS user4_ on users3_.id=user4_.id left outer join USERS user5_ on post1_.user_id=user5_.id left outer join Vote votes6_ on post1_.id=votes6_.postId left outer join USERS user7_ on comment0_.user_id=user7_.id where comment0_.id=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dddefd8]
- Visiting attribute path : content
- Visiting attribute path : post
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12bfd80d]
- Visiting attribute path : post.comments
- Property path deemed to be circular : post.comments
- Visiting attribute path : post.content
- Visiting attribute path : post.group
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13e3c1c7]
- Visiting attribute path : post.group.name
- Visiting attribute path : post.group.users
- Adding QuerySpace : uid = &lt;gen:3&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f053c80]
- Adding QuerySpace : uid = &lt;gen:4&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c6c5427]
- Visiting attribute path : post.group.users.groups
- Property path deemed to be circular : post.group.users.groups
- Visiting attribute path : post.group.users.nickname
- Visiting attribute path : post.group.users.role
- Visiting attribute path : post.imageUrl
- Visiting attribute path : post.title
- Visiting attribute path : post.user
- Adding QuerySpace : uid = &lt;gen:5&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13c3c1e1]
- Visiting attribute path : post.user.groups
- Property path deemed to be circular : post.user.groups
- Visiting attribute path : post.user.nickname
- Visiting attribute path : post.user.role
- Visiting attribute path : post.votes
- Adding QuerySpace : uid = &lt;gen:6&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e63ec0b]
- Adding QuerySpace : uid = &lt;gen:7&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b956878]
- Adding QuerySpace : uid = &lt;gen:7&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@36546a22]
- Visiting attribute path : post.votes.postId
- Visiting attribute path : post.votes.userId
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:8&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c88b9fc]
- Visiting attribute path : user.groups
- Property path deemed to be circular : user.groups
- Visiting attribute path : user.nickname
- Visiting attribute path : user.role
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Comment)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Comment)
          - EntityAttributeFetchImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Comment.post)
             - EntityAttributeFetchImpl(entity=com.revature.models.Group, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Comment.post.group)
                - CollectionAttributeFetchImpl(collection=com.revature.models.Group.users, querySpaceUid=&lt;gen:3&gt;, path=com.revature.models.Comment.post.group.users)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.User, querySpaceUid=&lt;gen:4&gt;, path=com.revature.models.Comment.post.group.users.&lt;elements&gt;)
             - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:5&gt;, path=com.revature.models.Comment.post.user)
             - CollectionAttributeFetchImpl(collection=com.revature.models.Post.votes, querySpaceUid=&lt;gen:6&gt;, path=com.revature.models.Comment.post.votes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:7&gt;, path=com.revature.models.Comment.post.votes.&lt;elements&gt;)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:8&gt;, path=com.revature.models.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(post)) : &lt;gen:0&gt; -&gt; &lt;gen:1&gt;
             - EntityQuerySpaceImpl(uid=&lt;gen:1&gt;, entity=com.revature.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(group)) : &lt;gen:1&gt; -&gt; &lt;gen:2&gt;
                   - EntityQuerySpaceImpl(uid=&lt;gen:2&gt;, entity=com.revature.models.Group)
                      - SQL table alias mapping - group2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(users)) : &lt;gen:2&gt; -&gt; &lt;gen:3&gt;
                         - CollectionQuerySpaceImpl(uid=&lt;gen:3&gt;, collection=com.revature.models.Group.users)
                            - SQL table alias mapping - users3_
                            - alias suffix - 3_
                            - suffixed key columns - {name1_1_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_4_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : &lt;gen:3&gt; -&gt; &lt;gen:4&gt;
                               - EntityQuerySpaceImpl(uid=&lt;gen:4&gt;, entity=com.revature.models.User)
                                  - SQL table alias mapping - user4_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(user)) : &lt;gen:1&gt; -&gt; &lt;gen:5&gt;
                   - EntityQuerySpaceImpl(uid=&lt;gen:5&gt;, entity=com.revature.models.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_4_5_}
                - JOIN (JoinDefinedByMetadata(votes)) : &lt;gen:1&gt; -&gt; &lt;gen:6&gt;
                   - CollectionQuerySpaceImpl(uid=&lt;gen:6&gt;, collection=com.revature.models.Post.votes)
                      - SQL table alias mapping - votes6_
                      - alias suffix - 6_
                      - suffixed key columns - {postId1_3_6_}
                      - entity-element alias suffix - 7_
                      - 7_entity-element suffixed key columns - postId1_5_7_, userId2_5_7_
                      - JOIN (JoinDefinedByMetadata(elements)) : &lt;gen:6&gt; -&gt; &lt;gen:7&gt;
                         - EntityQuerySpaceImpl(uid=&lt;gen:7&gt;, entity=com.revature.models.Vote)
                            - SQL table alias mapping - votes6_
                            - alias suffix - 7_
                            - suffixed key columns - {postId1_5_7_, userId2_5_7_}
                            - JOIN (JoinDefinedByMetadata(id)) : &lt;gen:7&gt; -&gt; &lt;gen:7&gt;-id
                               - CompositeQuerySpaceImpl(uid=&lt;gen:7&gt;-id)
                                  - SQL table alias mapping - votes6_
          - JOIN (JoinDefinedByMetadata(user)) : &lt;gen:0&gt; -&gt; &lt;gen:8&gt;
             - EntityQuerySpaceImpl(uid=&lt;gen:8&gt;, entity=com.revature.models.User)
                - SQL table alias mapping - user7_
                - alias suffix - 8_
                - suffixed key columns - {id1_4_8_}

- Static select for entity com.revature.models.Comment [READ]: select comment0_.id as id1_0_0_, comment0_.content as content2_0_0_, comment0_.post_id as post_id3_0_0_, comment0_.user_id as user_id4_0_0_, post1_.id as id1_3_1_, post1_.content as content2_3_1_, post1_.group_id as group_id5_3_1_, post1_.imageUrl as imageUrl3_3_1_, post1_.title as title4_3_1_, post1_.user_id as user_id6_3_1_, group2_.id as id1_1_2_, group2_.GROUP_NAME as GROUP_NAME2_1_2_, users3_.name as name1_1_3_, user4_.id as id2_2_3_, user4_.id as id1_4_4_, user4_.nickname as nickname2_4_4_, user4_.role as role3_4_4_, user5_.id as id1_4_5_, user5_.nickname as nickname2_4_5_, user5_.role as role3_4_5_, votes6_.postId as postId1_3_6_, votes6_.postId as postId1_5_6_, votes6_.userId as userId2_5_6_, votes6_.postId as postId1_5_7_, votes6_.userId as userId2_5_7_, user7_.id as id1_4_8_, user7_.nickname as nickname2_4_8_, user7_.role as role3_4_8_ from COMMENTS comment0_ left outer join Post post1_ on comment0_.post_id=post1_.id left outer join GROUPS group2_ on post1_.group_id=group2_.id left outer join GROUPS_USERS users3_ on group2_.id=users3_.name left outer join USERS user4_ on users3_.id=user4_.id left outer join USERS user5_ on post1_.user_id=user5_.id left outer join Vote votes6_ on post1_.id=votes6_.postId left outer join USERS user7_ on comment0_.user_id=user7_.id where comment0_.id=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@388ba540]
- Visiting attribute path : content
- Visiting attribute path : post
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ece4966]
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dd0e7c4]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Comment)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Comment)
          - EntityAttributeFetchImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Comment.post)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

- Static select for entity com.revature.models.Comment [UPGRADE]: select comment0_.id as id1_0_0_, comment0_.content as content2_0_0_, comment0_.post_id as post_id3_0_0_, comment0_.user_id as user_id4_0_0_ from COMMENTS comment0_ where comment0_.id=? for update
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7894f09b]
- Visiting attribute path : content
- Visiting attribute path : post
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6111ba37]
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7be58f16]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Comment)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Comment)
          - EntityAttributeFetchImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Comment.post)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

- Static select for entity com.revature.models.Comment [UPGRADE_NOWAIT]: select comment0_.id as id1_0_0_, comment0_.content as content2_0_0_, comment0_.post_id as post_id3_0_0_, comment0_.user_id as user_id4_0_0_ from COMMENTS comment0_ where comment0_.id=? for update nowait
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@242aa8d9]
- Visiting attribute path : content
- Visiting attribute path : post
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37bd68c3]
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f7cc1d]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Comment)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Comment)
          - EntityAttributeFetchImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Comment.post)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

- Static select for entity com.revature.models.Comment [UPGRADE_SKIPLOCKED]: select comment0_.id as id1_0_0_, comment0_.content as content2_0_0_, comment0_.post_id as post_id3_0_0_, comment0_.user_id as user_id4_0_0_ from COMMENTS comment0_ where comment0_.id=? for update skip locked
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11eadcba]
- Visiting attribute path : content
- Visiting attribute path : post
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b065145]
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45cff11c]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Comment)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Comment)
          - EntityAttributeFetchImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Comment.post)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

- Static select for entity com.revature.models.Comment [FORCE]: select comment0_.id as id1_0_0_, comment0_.content as content2_0_0_, comment0_.post_id as post_id3_0_0_, comment0_.user_id as user_id4_0_0_ from COMMENTS comment0_ where comment0_.id=? for update nowait
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@207ea13]
- Visiting attribute path : content
- Visiting attribute path : post
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62dae540]
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5827af16]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Comment)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Comment)
          - EntityAttributeFetchImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Comment.post)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

- Static select for entity com.revature.models.Comment [PESSIMISTIC_READ]: select comment0_.id as id1_0_0_, comment0_.content as content2_0_0_, comment0_.post_id as post_id3_0_0_, comment0_.user_id as user_id4_0_0_ from COMMENTS comment0_ where comment0_.id=? for update
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@654d8173]
- Visiting attribute path : content
- Visiting attribute path : post
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@630cb4a4]
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@636e8cc]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Comment)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Comment)
          - EntityAttributeFetchImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Comment.post)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

- Static select for entity com.revature.models.Comment [PESSIMISTIC_WRITE]: select comment0_.id as id1_0_0_, comment0_.content as content2_0_0_, comment0_.post_id as post_id3_0_0_, comment0_.user_id as user_id4_0_0_ from COMMENTS comment0_ where comment0_.id=? for update
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f79a760]
- Visiting attribute path : content
- Visiting attribute path : post
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12dae582]
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@239b0f9d]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Comment)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Comment)
          - EntityAttributeFetchImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Comment.post)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

- Static select for entity com.revature.models.Comment [PESSIMISTIC_FORCE_INCREMENT]: select comment0_.id as id1_0_0_, comment0_.content as content2_0_0_, comment0_.post_id as post_id3_0_0_, comment0_.user_id as user_id4_0_0_ from COMMENTS comment0_ where comment0_.id=? for update nowait
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@619bfe29]
- Visiting attribute path : content
- Visiting attribute path : post
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1eb6749b]
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@652a7737]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Comment)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Comment)
          - EntityAttributeFetchImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Comment.post)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

- Static select for entity com.revature.models.Comment [OPTIMISTIC]: select comment0_.id as id1_0_0_, comment0_.content as content2_0_0_, comment0_.post_id as post_id3_0_0_, comment0_.user_id as user_id4_0_0_ from COMMENTS comment0_ where comment0_.id=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b7ea70d]
- Visiting attribute path : content
- Visiting attribute path : post
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@650eab8]
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30f5a68a]
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(entity=com.revature.models.Comment)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:0&gt;, path=com.revature.models.Comment)
          - EntityAttributeFetchImpl(entity=com.revature.models.Post, querySpaceUid=&lt;gen:1&gt;, path=com.revature.models.Comment.post)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=com.revature.models.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=&lt;gen:0&gt;, entity=com.revature.models.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

- Static select for entity com.revature.models.Comment [OPTIMISTIC_FORCE_INCREMENT]: select comment0_.id as id1_0_0_, comment0_.content as content2_0_0_, comment0_.post_id as post_id3_0_0_, comment0_.user_id as user_id4_0_0_ from COMMENTS comment0_ where comment0_.id=?
- Static select for action ACTION_MERGE on entity com.revature.models.Comment: select comment0_.id as id1_0_0_, comment0_.content as content2_0_0_, comment0_.post_id as post_id3_0_0_, comment0_.user_id as user_id4_0_0_ from COMMENTS comment0_ where comment0_.id=?
- Static select for action ACTION_REFRESH on entity com.revature.models.Comment: select comment0_.id as id1_0_0_, comment0_.content as content2_0_0_, comment0_.post_id as post_id3_0_0_, comment0_.user_id as user_id4_0_0_ from COMMENTS comment0_ where comment0_.id=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c260bdc]
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75e01201]
- Visiting attribute path : groups
- Property path deemed to be circular : groups
- Visiting attribute path : nickname
- Visiting attribute path : role
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(collection=com.revature.models.Group.users)
    - Returns
       - CollectionReturnImpl(collection=com.revature.models.Group.users, querySpaceUid=&lt;gen:0&gt;, path=[com.revature.models.Group.users])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.User, querySpaceUid=&lt;gen:1&gt;, path=[com.revature.models.Group.users].&lt;elements&gt;)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=&lt;gen:0&gt;, collection=com.revature.models.Group.users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : &lt;gen:0&gt; -&gt; &lt;gen:1&gt;
             - EntityQuerySpaceImpl(uid=&lt;gen:1&gt;, entity=com.revature.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

- Static select for collection com.revature.models.Group.users: select users0_.name as name1_1_0_, users0_.id as id2_2_0_, user1_.id as id1_4_1_, user1_.nickname as nickname2_4_1_, user1_.role as role3_4_1_ from GROUPS_USERS users0_ inner join USERS user1_ on users0_.id=user1_.id where users0_.name=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22d6f11]
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30990c1b]
- Adding QuerySpace : uid = &lt;gen:1&gt;-id -&gt; org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2453f95d]
- Visiting attribute path : postId
- Visiting attribute path : userId
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(collection=com.revature.models.Post.votes)
    - Returns
       - CollectionReturnImpl(collection=com.revature.models.Post.votes, querySpaceUid=&lt;gen:0&gt;, path=[com.revature.models.Post.votes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Vote, querySpaceUid=&lt;gen:1&gt;, path=[com.revature.models.Post.votes].&lt;elements&gt;)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=&lt;gen:0&gt;, collection=com.revature.models.Post.votes)
          - SQL table alias mapping - votes0_
          - alias suffix - 0_
          - suffixed key columns - {postId1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - postId1_5_1_, userId2_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : &lt;gen:0&gt; -&gt; &lt;gen:1&gt;
             - EntityQuerySpaceImpl(uid=&lt;gen:1&gt;, entity=com.revature.models.Vote)
                - SQL table alias mapping - votes0_
                - alias suffix - 1_
                - suffixed key columns - {postId1_5_1_, userId2_5_1_}
                - JOIN (JoinDefinedByMetadata(id)) : &lt;gen:1&gt; -&gt; &lt;gen:1&gt;-id
                   - CompositeQuerySpaceImpl(uid=&lt;gen:1&gt;-id)
                      - SQL table alias mapping - votes0_

- Static select for collection com.revature.models.Post.votes: select votes0_.postId as postId1_3_0_, votes0_.postId as postId1_5_0_, votes0_.userId as userId2_5_0_, votes0_.postId as postId1_5_1_, votes0_.userId as userId2_5_1_ from Vote votes0_ where votes0_.postId=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e1d8f9e]
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e34ace1]
- Visiting attribute path : content
- Visiting attribute path : post
- Property path deemed to be circular : post
- Visiting attribute path : user
- Adding QuerySpace : uid = &lt;gen:2&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4de41af9]
- Visiting attribute path : user.groups
- Adding QuerySpace : uid = &lt;gen:3&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47404bea]
- Adding QuerySpace : uid = &lt;gen:4&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@305f7627]
- Visiting attribute path : user.nickname
- Visiting attribute path : user.role
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(collection=com.revature.models.Post.comments)
    - Returns
       - CollectionReturnImpl(collection=com.revature.models.Post.comments, querySpaceUid=&lt;gen:0&gt;, path=[com.revature.models.Post.comments])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Comment, querySpaceUid=&lt;gen:1&gt;, path=[com.revature.models.Post.comments].&lt;elements&gt;)
             - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=&lt;gen:2&gt;, path=[com.revature.models.Post.comments].&lt;elements&gt;.user)
                - CollectionAttributeFetchImpl(collection=com.revature.models.User.groups, querySpaceUid=&lt;gen:3&gt;, path=[com.revature.models.Post.comments].&lt;elements&gt;.user.groups)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Group, querySpaceUid=&lt;gen:4&gt;, path=[com.revature.models.Post.comments].&lt;elements&gt;.user.groups.&lt;elements&gt;)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=&lt;gen:0&gt;, collection=com.revature.models.Post.comments)
          - SQL table alias mapping - comments0_
          - alias suffix - 0_
          - suffixed key columns - {post_id3_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : &lt;gen:0&gt; -&gt; &lt;gen:1&gt;
             - EntityQuerySpaceImpl(uid=&lt;gen:1&gt;, entity=com.revature.models.Comment)
                - SQL table alias mapping - comments0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : &lt;gen:1&gt; -&gt; &lt;gen:2&gt;
                   - EntityQuerySpaceImpl(uid=&lt;gen:2&gt;, entity=com.revature.models.User)
                      - SQL table alias mapping - user1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

- Static select for collection com.revature.models.Post.comments: select comments0_.post_id as post_id3_3_0_, comments0_.id as id1_0_0_, comments0_.id as id1_0_1_, comments0_.content as content2_0_1_, comments0_.post_id as post_id3_0_1_, comments0_.user_id as user_id4_0_1_, user1_.id as id1_4_2_, user1_.nickname as nickname2_4_2_, user1_.role as role3_4_2_ from COMMENTS comments0_ left outer join USERS user1_ on comments0_.user_id=user1_.id where comments0_.post_id=?
- Adding QuerySpace : uid = &lt;gen:0&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d018107]
- Adding QuerySpace : uid = &lt;gen:1&gt; -&gt; org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cbcf243]
- Visiting attribute path : name
- Visiting attribute path : users
- Property path deemed to be circular : users
- Building LoadPlan...
- processing queryspace &lt;gen:0&gt;
- LoadPlan(collection=com.revature.models.User.groups)
    - Returns
       - CollectionReturnImpl(collection=com.revature.models.User.groups, querySpaceUid=&lt;gen:0&gt;, path=[com.revature.models.User.groups])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Group, querySpaceUid=&lt;gen:1&gt;, path=[com.revature.models.User.groups].&lt;elements&gt;)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=&lt;gen:0&gt;, collection=com.revature.models.User.groups)
          - SQL table alias mapping - groups0_
          - alias suffix - 0_
          - suffixed key columns - {id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : &lt;gen:0&gt; -&gt; &lt;gen:1&gt;
             - EntityQuerySpaceImpl(uid=&lt;gen:1&gt;, entity=com.revature.models.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

- Static select for collection com.revature.models.User.groups: select groups0_.id as id2_4_0_, groups0_.name as name1_2_0_, group1_.id as id1_1_1_, group1_.GROUP_NAME as GROUP_NAME2_1_1_ from GROUPS_USERS groups0_ inner join GROUPS group1_ on groups0_.name=group1_.id where groups0_.id=?
- Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@61bcd567
- Registering SessionFactory: 9559bbab-db41-45b6-964d-f27419a02cb5 (&lt;unnamed&gt;)
- Not binding SessionFactory to JNDI, no JNDI name configured
- Instantiated session factory
- HHH000229: Running schema validator
- HHH000102: Fetching database metadata
- Processing hbm.xml files
- Process annotated classes
- Processing fk mappings (*ToOne and JoinedSubclass)
- Processing extends queue
- Processing extends queue
- Processing collection mappings
- Processing native query and ResultSetMapping mappings
- Processing association property references
- Creating tables&apos; unique integer identifiers
- Processing foreign key constraints
- Resolving reference to class: com.revature.models.Post
- Resolving reference to class: com.revature.models.User
- Resolving reference to class: com.revature.models.User
- Resolving reference to class: com.revature.models.Group
- Resolving reference to class: com.revature.models.Group
- Resolving reference to class: com.revature.models.User
- Resolving reference to class: com.revature.models.Post
- HHH000261: Table found: CRANDON.COMMENTS
- HHH000037: Columns: [user_user_id, post_id, user_id, id, content]
- HHH000261: Table found: CRANDON.GROUPS
- HHH000037: Columns: [group_name, name, id]
- HHH000261: Table found: CRANDON.GROUPS_USERS
- HHH000037: Columns: [group_name, user_id, name, id]
- HHH000261: Table found: CRANDON.POST
- HHH000037: Columns: [user_user_id, group_id, user_id, imageurl, id, title, group_group_id, content]
- HHH000261: Table found: CRANDON.USERS
- HHH000037: Columns: [role, nickname, id]
- HHH000261: Table found: CRANDON.VOTE
- HHH000037: Columns: [votes_id, post_id, postid, userid]
- Setting dialect [org.hibernate.dialect.Oracle10gDialect]
- Setting dialect [org.hibernate.dialect.Oracle10gDialect]
- Setting dialect [org.hibernate.dialect.Oracle10gDialect]
- Setting dialect [org.hibernate.dialect.Oracle10gDialect]
- Checking 0 named HQL queries
- Checking 0 named SQL queries
- Statistics initialized [enabled=false]
- select comment0_.id as id1_0_0_, comment0_.content as content2_0_0_, comment0_.post_id as post_id3_0_0_, comment0_.user_id as user_id4_0_0_, post1_.id as id1_3_1_, post1_.content as content2_3_1_, post1_.group_id as group_id5_3_1_, post1_.imageUrl as imageUrl3_3_1_, post1_.title as title4_3_1_, post1_.user_id as user_id6_3_1_, group2_.id as id1_1_2_, group2_.GROUP_NAME as GROUP_NAME2_1_2_, users3_.name as name1_1_3_, user4_.id as id2_2_3_, user4_.id as id1_4_4_, user4_.nickname as nickname2_4_4_, user4_.role as role3_4_4_, user5_.id as id1_4_5_, user5_.nickname as nickname2_4_5_, user5_.role as role3_4_5_, votes6_.postId as postId1_3_6_, votes6_.postId as postId1_5_6_, votes6_.userId as userId2_5_6_, votes6_.postId as postId1_5_7_, votes6_.userId as userId2_5_7_, user7_.id as id1_4_8_, user7_.nickname as nickname2_4_8_, user7_.role as role3_4_8_ from COMMENTS comment0_ left outer join Post post1_ on comment0_.post_id=post1_.id left outer join GROUPS group2_ on post1_.group_id=group2_.id left outer join GROUPS_USERS users3_ on group2_.id=users3_.name left outer join USERS user4_ on users3_.id=user4_.id left outer join USERS user5_ on post1_.user_id=user5_.id left outer join Vote votes6_ on post1_.id=votes6_.postId left outer join USERS user7_ on comment0_.user_id=user7_.id where comment0_.id=?
Hibernate: select comment0_.id as id1_0_0_, comment0_.content as content2_0_0_, comment0_.post_id as post_id3_0_0_, comment0_.user_id as user_id4_0_0_, post1_.id as id1_3_1_, post1_.content as content2_3_1_, post1_.group_id as group_id5_3_1_, post1_.imageUrl as imageUrl3_3_1_, post1_.title as title4_3_1_, post1_.user_id as user_id6_3_1_, group2_.id as id1_1_2_, group2_.GROUP_NAME as GROUP_NAME2_1_2_, users3_.name as name1_1_3_, user4_.id as id2_2_3_, user4_.id as id1_4_4_, user4_.nickname as nickname2_4_4_, user4_.role as role3_4_4_, user5_.id as id1_4_5_, user5_.nickname as nickname2_4_5_, user5_.role as role3_4_5_, votes6_.postId as postId1_3_6_, votes6_.postId as postId1_5_6_, votes6_.userId as userId2_5_6_, votes6_.postId as postId1_5_7_, votes6_.userId as userId2_5_7_, user7_.id as id1_4_8_, user7_.nickname as nickname2_4_8_, user7_.role as role3_4_8_ from COMMENTS comment0_ left outer join Post post1_ on comment0_.post_id=post1_.id left outer join GROUPS group2_ on post1_.group_id=group2_.id left outer join GROUPS_USERS users3_ on group2_.id=users3_.name left outer join USERS user4_ on users3_.id=user4_.id left outer join USERS user5_ on post1_.user_id=user5_.id left outer join Vote votes6_ on post1_.id=votes6_.postId left outer join USERS user7_ on comment0_.user_id=user7_.id where comment0_.id=?
- Obtaining JDBC connection
- Obtained JDBC connection
- No collections were found in result set for role: com.revature.models.Group.users
- No collections were found in result set for role: com.revature.models.Post.votes
- Done entity load : com.revature.models.Comment#3
- Releasing JDBC connection
- Released JDBC connection
</system-out>
  </testcase>
  <testcase classname="com.revature.daotest.CommentDaoTest" name="getComments" time="0.762"/>
</testsuite>